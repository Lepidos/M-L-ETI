node n38 {
    type router
    model host
    network-config {
	hostname n38
	!
	interface eth0
	 ip address 10.0.0.243/28
	 mac address 00:00:00:aa:00:00
	!
    }
    canvas c1
    iconcoords {300.0 375.0}
    labelcoords {300.0 407.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n11}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=80
	cmdup=('sh defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=
	starttime=
	}
    }
}

node n11 {
    type lanswitch
    network-config {
	hostname Sw4
	!
    }
    canvas c1
    iconcoords {446.0 378.0}
    labelcoords {446.0 402.0}
    interface-peer {e0 n16}
    interface-peer {e1 n17}
    interface-peer {e2 n38}
}

node n16 {
    type hub
    network-config {
	hostname Hub7
	!
    }
    canvas c1
    iconcoords {445.0 511.0}
    labelcoords {445.0 535.0}
    interface-peer {e0 n11}
    interface-peer {e1 n31}
    interface-peer {e2 n30}
}

node n17 {
    type hub
    network-config {
	hostname Hub8
	!
    }
    canvas c1
    iconcoords {443.0 251.0}
    labelcoords {443.0 275.0}
    interface-peer {e0 n11}
    interface-peer {e1 n29}
    interface-peer {e2 n28}
}

node n28 {
    type router
    model PC
    network-config {
	hostname n28
	!
	interface eth0
	 ip address 10.0.0.242/28
	 mac address 00:00:00:aa:00:04
	!
    }
    canvas c1
    iconcoords {569.0 223.0}
    labelcoords {569.0 255.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=80
	cmdup=('sh defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=
	starttime=
	}
    }
}

node n29 {
    type router
    model PC
    network-config {
	hostname n29
	!
	interface eth0
	 ip address 10.0.0.241/28
	 mac address 00:00:00:aa:00:03
	!
    }
    canvas c1
    iconcoords {306.0 217.0}
    labelcoords {306.0 249.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=80
	cmdup=('sh defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=
	starttime=
	}
    }
}

node n30 {
    type router
    model PC
    network-config {
	hostname n30
	!
	interface eth0
	 ip address 10.0.0.245/28
	 mac address 00:00:00:aa:00:02
	!
    }
    canvas c1
    iconcoords {337.0 568.0}
    labelcoords {337.0 600.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=80
	cmdup=('sh defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=
	starttime=
	}
    }
}

node n31 {
    type router
    model PC
    network-config {
	hostname n31
	!
	interface eth0
	 ip address 10.0.0.244/28
	 mac address 00:00:00:aa:00:01
	!
    }
    canvas c1
    iconcoords {542.0 572.0}
    labelcoords {542.0 604.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=80
	cmdup=('sh defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=
	starttime=
	}
    }
}

link l1 {
    nodes {n11 n16}
}

link l2 {
    nodes {n11 n17}
}

link l3 {
    nodes {n11 n38}
}

link l4 {
    nodes {n16 n31}
}

link l5 {
    nodes {n16 n30}
}

link l6 {
    nodes {n17 n29}
}

link l7 {
    nodes {n17 n28}
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

