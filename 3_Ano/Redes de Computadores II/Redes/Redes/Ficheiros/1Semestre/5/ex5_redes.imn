node n2 {
    type hub
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {853.0 151.0}
    labelcoords {853.0 175.0}
    interface-peer {e3 n1}
    interface-peer {e0 n22}
    interface-peer {e1 n23}
}

node n3 {
    type hub
    network-config {
	hostname n3
	!
    }
    canvas c1
    iconcoords {122.0 546.0}
    labelcoords {122.0 570.0}
    interface-peer {e0 n13}
    interface-peer {e1 n16}
    interface-peer {e2 n17}
    interface-peer {e4 n15}
    interface-peer {e5 n14}
    interface-peer {e6 n28}
    interface-peer {e7 n32}
}

node n4 {
    type hub
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {769.0 155.0}
    labelcoords {769.0 179.0}
    interface-peer {e0 n21}
    interface-peer {e1 n20}
    interface-peer {e2 n1}
}

node n5 {
    type hub
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {662.0 569.0}
    labelcoords {662.0 593.0}
    interface-peer {e0 n10}
    interface-peer {e1 n11}
    interface-peer {e2 n12}
    interface-peer {e3 n31}
    interface-peer {e4 n18}
    interface-peer {e5 n35}
}

node n6 {
    type lanswitch
    network-config {
	hostname n6
	!
    }
    canvas c1
    iconcoords {167.0 205.0}
    labelcoords {167.0 237.0}
    interface-peer {e0 n7}
    interface-peer {e1 n8}
    interface-peer {e2 n9}
    interface-peer {e3 n29}
    interface-peer {e4 n33}
    interface-peer {e5 n34}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.1.43/29
	!
    }
    canvas c1
    iconcoords {310.6666666666667 96.66666666666667}
    labelcoords {353.3333333333333 83.33333333333333}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.46
	
	}
    }
    services {DefaultRoute}
}

node n8 {
    type router
    model PC
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.1.42/29
	!
    }
    canvas c1
    iconcoords {207.0 52.333333333333336}
    labelcoords {221.66666666666666 27.0}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.46
	
	}
    }
    services {DefaultRoute}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.1.41/29
	!
    }
    canvas c1
    iconcoords {98.0 86.0}
    labelcoords {83.33333333333333 66.0}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.46
	
	}
    }
    services {DefaultRoute}
}

node n10 {
    type router
    model PC
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.1.33/29
	!
    }
    canvas c1
    iconcoords {550.0 626.0}
    labelcoords {551.3333333333334 670.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.38
	
	}
    }
    services {DefaultRoute}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.1.34/29
	!
    }
    canvas c1
    iconcoords {653.0 674.0}
    labelcoords {666.3333333333334 722.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.38
	
	}
    }
    services {DefaultRoute}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 10.0.1.35/29
	!
    }
    canvas c1
    iconcoords {763.0 635.0}
    labelcoords {767.0 679.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.38
	
	}
    }
    services {DefaultRoute}
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {24.0 477.0}
    labelcoords {25.333333333333332 526.3333333333334}
    interface-peer {eth0 n3}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
}

node n14 {
    type router
    model PC
    network-config {
	hostname n14
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {19.0 584.0}
    labelcoords {21.666666666666668 633.3333333333334}
    interface-peer {eth0 n3}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {119.0 632.0}
    labelcoords {123.0 674.6666666666666}
    interface-peer {eth0 n3}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
}

node n16 {
    type router
    model PC
    network-config {
	hostname n16
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {63.0 393.0}
    labelcoords {32.333333333333336 435.6666666666667}
    interface-peer {eth0 n3}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {238.0 587.0}
    labelcoords {240.66666666666666 635.0}
    interface-peer {eth0 n3}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	 ip address 10.0.1.2/28
	!
    }
    canvas c1
    iconcoords {734.0 18.0}
    labelcoords {698.0 51.333333333333336}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	}
    }
    services {DefaultRoute}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	 ip address 10.0.1.3/28
	!
    }
    canvas c1
    iconcoords {847.0 40.0}
    labelcoords {876.3333333333334 26.666666666666668}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	}
    }
    services {DefaultRoute}
}

node n28 {
    type router
    model host
    network-config {
	hostname DHCP
	!
	interface eth0
	 ip address 10.0.1.17/28
	!
    }
    canvas c1
    iconcoords {185.0 417.0}
    labelcoords {217.0 446.3333333333333}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.30
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.1.1;
	#option routers 10.0.1.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 10.0.1.16 netmask 255.255.255.240{
	  pool {
	    range 10.0.1.17 10.0.1.29;
	    default-lease-time 600;
	    option routers 10.0.1.30;
	  }
	}
	
	
	}
    }
    services {DefaultRoute DHCP}
}

node n29 {
    type router
    model router
    network-config {
	hostname R1
	!
	interface eth3
	 ip address 192.168.1.17/30
	!
	interface eth2
	 ip address 192.168.1.14/30
	!
	interface eth0
	 ip address 192.168.1.1/30
	!
	interface eth1
	 ip address 10.0.1.46/29
	!
    }
    canvas c1
    iconcoords {328.0 263.0}
    labelcoords {328.0 295.0}
    interface-peer {eth0 n30}
    interface-peer {eth1 n6}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.1/30
	  
	!
	interface eth1
	  ip address 10.0.1.46/29
	  
	!
	interface eth2
	  ip address 192.168.1.14/30
	  
	!
	interface eth3
	  ip address 192.168.1.17/30
	  
	!
	ip route 10.0.1.0/28 192.168.1.2
	ip route 10.0.1.16/28 192.168.1.13
	ip route 10.0.1.32/29 192.168.1.18
	!
	ip forwarding
	}
    }
    interface-peer {eth2 n32}
    interface-peer {eth3 n27}
}

node n30 {
    type router
    model router
    network-config {
	hostname R2
	!
	interface eth3
	 ip address 192.168.1.21/30
	!
	interface eth1
	 ip address 192.168.1.5/30
	!
	interface eth2
	 ip address 10.0.1.14/28
	!
	interface eth0
	 ip address 192.168.1.2/30
	!
    }
    canvas c1
    iconcoords {636.0 263.0}
    labelcoords {636.0 295.0}
    interface-peer {eth0 n29}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.2/30
	  
	!
	interface eth1
	  ip address 192.168.1.5/30
	  
	!
	interface eth2
	  ip address 10.0.1.14/28
	  
	!
	interface eth3
	  ip address 192.168.1.21/30
	  
	!
	ip route 10.0.1.16/28 192.168.1.22
	ip route 10.0.1.32/29 192.168.1.6
	ip route 10.0.1.40/29 192.168.1.1
	!
	ip forwarding
	
	}
    }
    interface-peer {eth2 n1}
    interface-peer {eth1 n24}
    interface-peer {eth3 n27}
}

node n31 {
    type router
    model router
    network-config {
	hostname R4
	!
	interface eth3
	 ip address 192.168.1.30/30
	!
	interface eth1
	 ip address 192.1.168.26/30
	!
	interface eth2
	 ip address 10.0.1.38/29
	!
	interface eth0
	 ip address 192.168.1.9/30
	!
    }
    canvas c1
    iconcoords {635.0 456.0}
    labelcoords {635.0 488.0}
    interface-peer {eth0 n32}
    interface-peer {eth2 n5}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.9/30
	  
	!
	interface eth1
	  ip address 192.168.1.26/30
	  
	!
	interface eth2
	  ip address 10.0.1.38/29
	  
	!
	interface eth3
	  ip address 192.168.1.30/30
	  
	!
	ip route 10.0.1.0/28 192.168.1.25
	ip route 10.0.1.16/28 192.168.1.10
	ip route 10.0.1.40/29 192.168.1.29
	!
	ip forwarding
	
	}
    }
    interface-peer {eth1 n24}
    interface-peer {eth3 n27}
}

node n32 {
    type router
    model router
    network-config {
	hostname R3
	!
	interface eth3
	 ip address 192.168.1.34/30
	!
	interface eth0
	 ip address 192.168.1.13/30
	!
	interface eth2
	 ip address 10.0.1.30/28
	!
	interface eth1
	 ip address 192.168.1.10/30
	!
    }
    canvas c1
    iconcoords {326.0 456.0}
    labelcoords {326.0 488.0}
    interface-peer {eth1 n31}
    interface-peer {eth2 n3}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.13/30
	  
	!
	interface eth1
	  ip address 192.168.1.10/30
	  
	!
	interface eth2
	  ip address 10.0.1.30/28
	  
	!
	interface eth3
	  ip address 192.168.1.34/30
	!
	ip route 10.0.1.0/28 192.168.1.33
	ip route 10.0.1.32/29 192.168.1.9
	ip route 10.0.1.40/29 192.168.1.14
	!
	ip forwarding
	}
    }
    interface-peer {eth0 n29}
    interface-peer {eth3 n27}
}

node n33 {
    type router
    model host
    network-config {
	hostname HTTP
	!
	interface eth0
	 ip address 10.0.1.44/29
	!
    }
    canvas c1
    iconcoords {340.3333333333333 169.33333333333334}
    labelcoords {376.3333333333333 185.33333333333334}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	cmdup=('mkdir -p /run/lock', 'mkdir -p /var/log/apache2', 'apache2ctl start', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.46
	}
    }
    services {vtysh DefaultRoute HTTP}
}

node n34 {
    type router
    model host
    network-config {
	hostname n34
	!
	interface eth0
	 ip address 10.0.1.45/29
	!
    }
    canvas c1
    iconcoords {42.0 176.0}
    labelcoords {40.666666666666664 149.33333333333334}
    interface-peer {eth0 n6}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.46
	
	}
    }
}

node n18 {
    type router
    model host
    network-config {
	hostname n18
	!
	interface eth0
	 ip address 10.0.1.37/29
	!
    }
    canvas c1
    iconcoords {771.0 516.0}
    labelcoords {780.3333333333334 564.0}
    interface-peer {eth0 n5}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.38
	
	}
    }
}

node n35 {
    type router
    model host
    network-config {
	hostname FTP
	!
	interface eth0
	 ip address 10.0.1.36/29
	!
    }
    canvas c1
    iconcoords {519.0 525.0}
    labelcoords {513.6666666666666 573.0}
    interface-peer {eth0 n5}
    services {DefaultRoute FTP}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	files=('vsftpd.conf', )
	cmdup=('chmod a-w /var/run/vsftpd/empty', 'chmod a-w /var/ftp', 'vsftpd ./vsftpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	write_enable=YES
	chroot_local_user=NO
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Servidor MIETI Redes Computadores 1
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.38
	
	}
    }
}

node n1 {
    type hub
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {753.0 266.0}
    labelcoords {753.0 290.0}
    interface-peer {e0 n30}
    interface-peer {e1 n19}
    interface-peer {e2 n2}
    interface-peer {e3 n4}
}

node n19 {
    type lanswitch
    network-config {
	hostname n19
	!
    }
    canvas c1
    iconcoords {861.0 281.0}
    labelcoords {861.0 305.0}
    interface-peer {e0 n1}
    interface-peer {e1 n25}
    interface-peer {e2 n26}
}

node n25 {
    type router
    model PC
    network-config {
	hostname n25
	!
	interface eth0
	 ip address 10.0.1.7/28
	!
    }
    canvas c1
    iconcoords {953.0 349.0}
    labelcoords {957.0 397.0}
    interface-peer {eth0 n19}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	}
    }
    services {DefaultRoute}
}

node n26 {
    type router
    model PC
    network-config {
	hostname n26
	!
	interface eth0
	 ip address 10.0.1.6/28
	!
    }
    canvas c1
    iconcoords {969.0 229.0}
    labelcoords {978.3333333333334 278.3333333333333}
    interface-peer {eth0 n19}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	
	}
    }
    services {DefaultRoute}
}

node n22 {
    type router
    model host
    network-config {
	hostname n22
	!
	interface eth0
	 ip address 10.0.1.4/28
	!
    }
    canvas c1
    iconcoords {922.0 85.0}
    labelcoords {931.3333333333334 59.666666666666664}
    interface-peer {eth0 n2}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	}
    }
}

node n23 {
    type router
    model host
    network-config {
	hostname n23
	!
	interface eth0
	 ip address 10.0.1.5/28
	!
    }
    canvas c1
    iconcoords {975.0 169.0}
    labelcoords {979.0 138.33333333333334}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.14
	
	}
    }
    services {DefaultRoute}
}

node n24 {
    type router
    model router
    network-config {
	hostname R5
	!
	interface eth1
	 ip address 192.1.168.25/30
	!
	interface eth0
	 ip address 192.1.168.6/30
	!
    }
    canvas c1
    iconcoords {634.0 359.0}
    labelcoords {634.0 391.0}
    interface-peer {eth0 n30}
    interface-peer {eth1 n31}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.6/30
	  
	!
	interface eth1
	  ip address 192.168.1.25/30
	  
	!
	
	ip route 10.0.1.0/28 192.168.1.5
	ip route 10.0.1.16/28 192.168.1.26
	ip route 10.0.1.32/29 192.168.1.26
	ip route 10.0.1.40/29 192.168.1.5
	!
	ip forwarding
	}
    }
}

node n27 {
    type router
    model router
    network-config {
	hostname R6
	!
	interface eth3
	 ip address 192.168.1.33/30
	!
	interface eth2
	 ip address 192.168.1.22/30
	!
	interface eth1
	 ip address 192.168.1.29/30
	!
	interface eth0
	 ip address 192.168.1.18/30
	!
    }
    canvas c1
    iconcoords {476.6666666666667 351.3333333333333}
    labelcoords {476.6666666666667 383.3333333333333}
    interface-peer {eth0 n29}
    services {zebra vtysh}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.18/30
	  
	!
	interface eth1
	  ip address 192.168.1.29/30
	  
	!
	interface eth2
	  ip address 192.168.1.22/30
	  
	!
	interface eth3
	  ip address 192.168.1.33/30
	  
	!
	
	ip route 10.0.1.0/28 192.168.1.21
	ip route 10.0.1.16/28 192.168.1.34
	ip route 10.0.1.32/29 192.168.1.30
	ip route 10.0.1.40/29 192.168.1.17
	!
	ip forwarding
	}
    }
    interface-peer {eth1 n31}
    interface-peer {eth2 n30}
    interface-peer {eth3 n32}
}

link l1 {
    nodes {n7 n6}
    bandwidth 0
}

link l2 {
    nodes {n8 n6}
    bandwidth 0
}

link l3 {
    nodes {n9 n6}
    bandwidth 0
}

link l4 {
    nodes {n13 n3}
    bandwidth 0
}

link l5 {
    nodes {n16 n3}
    bandwidth 0
}

link l6 {
    nodes {n17 n3}
    bandwidth 0
}

link l8 {
    nodes {n15 n3}
    bandwidth 0
}

link l9 {
    nodes {n14 n3}
    bandwidth 0
}

link l10 {
    nodes {n28 n3}
    bandwidth 0
}

link l11 {
    nodes {n10 n5}
    bandwidth 0
}

link l12 {
    nodes {n5 n11}
    bandwidth 0
}

link l13 {
    nodes {n5 n12}
    bandwidth 0
}

link l20 {
    nodes {n21 n4}
    bandwidth 0
}

link l21 {
    nodes {n20 n4}
    bandwidth 0
}

link l25 {
    nodes {n29 n30}
    bandwidth 0
}

link l26 {
    nodes {n29 n6}
    bandwidth 0
}

link l28 {
    nodes {n32 n31}
    bandwidth 0
}

link l30 {
    nodes {n31 n5}
    bandwidth 0
}

link l31 {
    nodes {n32 n3}
    bandwidth 0
}

link l35 {
    nodes {n33 n6}
    bandwidth 0
}

link l36 {
    nodes {n34 n6}
    bandwidth 0
}

link l7 {
    nodes {n18 n5}
    bandwidth 0
}

link l37 {
    nodes {n35 n5}
    bandwidth 0
}

link l14 {
    nodes {n30 n1}
    bandwidth 0
}

link l15 {
    nodes {n1 n19}
    bandwidth 0
}

link l16 {
    nodes {n1 n2}
}

link l22 {
    nodes {n1 n4}
}

link l23 {
    nodes {n19 n25}
    bandwidth 0
}

link l24 {
    nodes {n19 n26}
    bandwidth 0
}

link l17 {
    nodes {n2 n22}
    bandwidth 0
}

link l18 {
    nodes {n2 n23}
    bandwidth 0
}

link l19 {
    nodes {n29 n32}
    bandwidth 0
}

link l27 {
    nodes {n30 n24}
    bandwidth 0
}

link l29 {
    nodes {n24 n31}
    bandwidth 0
}

link l32 {
    nodes {n29 n27}
    bandwidth 0
}

link l33 {
    nodes {n27 n31}
    bandwidth 0
}

link l34 {
    nodes {n30 n27}
    bandwidth 0
}

link l38 {
    nodes {n27 n32}
    bandwidth 0
}

annotation a2 {
    iconcoords {679.0 2.0 992.0 405.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #be9024
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {481.0 482.0 812.0 725.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #00a93b
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {1.0 362.0 267.0 688.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ebf189
    width 0
    border black
    rad 25
    canvas c1
}

annotation a1 {
    iconcoords {13 26 382 272}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #60cfff
    width 0
    border black
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

