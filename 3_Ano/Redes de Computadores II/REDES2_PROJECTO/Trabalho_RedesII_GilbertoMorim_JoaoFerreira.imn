node n1 {
    type router
    model router
    network-config {
	hostname 100-0-B
	!
	interface eth2
	 ip address 200.130.0.6/30
	!
	interface eth0
	 ip address 192.168.1.9/30
	!
	interface eth1
	 ip address 192.168.1.2/30
	!
    }
    canvas c1
    iconcoords {525.6666666666666 468.3333333333333}
    labelcoords {523.6666666666666 516.3333333333334}
    interface-peer {eth0 n3}
    interface-peer {eth1 n2}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.1.9/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.1.2/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 200.130.0.6/30
	!
	ip as-path access-list 1 permit ^$
	ip as-path access-list 2 permit _65400$
	ip as-path access-list 3 deny _*
	!
	route-map teste permit 10
	 match as-path 1
	!
	router ospf
	  router-id 192.168.1.2
	  redistribute bgp
	  network 192.168.1.8/30 area 0
	  network 192.168.1.0/30 area 0
	  area 0 authentication message-digest
	!
	router bgp 65100
	 network 10.1.0.0/16
	 bgp router-id 192.168.1.2
	 neighbor 192.168.1.1 remote-as 65100
	 neighbor 192.168.1.1 next-hop-self
	 neighbor 192.168.1.1 route-map interno out
	 neighbor 192.168.1.10 remote-as 65100
	 neighbor 192.168.1.10 next-hop-self
	 neighbor 192.168.1.10 route-map interno out
	 neighbor 200.130.0.5 remote-as 65300
	 neighbor 200.130.0.5 route-map teste out
	!
	route-map interno permit 10
	 match as-path 2
	 set local-preference 300
	
	route-map interno permit 20
	 match as-path 3
	}
    }
    services {zebra OSPFv2 BGP vtysh IPForward}
    interface-peer {eth2 n58}
}

node n2 {
    type router
    model router
    network-config {
	hostname 100-0-A
	!
	interface eth3
	 ip address 200.130.0.2/30
	!
	interface eth1
	 ip address 192.168.1.5/30
	!
	interface eth0
	 ip address 192.168.1.22/30
	!
	interface eth2
	 ip address 192.168.1.1/30
	!
    }
    canvas c1
    iconcoords {301.0 482.0}
    labelcoords {301.0 514.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n3}
    interface-peer {eth2 n1}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.1.22/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.1.4/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 192.168.1.1/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth3
	 ip address 200.130.0.2/30
	!
	ip as-path access-list 1 permit _65300$
	ip as-path access-list 2 deny _*
	!
	route-map teste permit 10
	 match as-path 1
	!
	router ospf
	  router-id 200.130.0.2
	  redistribute bgp
	  network 192.168.1.20/30 area 0
	  network 192.168.1.4/30 area 0
	  network 192.168.1.0/30 area 0
	  area 0 authentication message-digest
	!
	router bgp 65100
	! 
	 network 10.1.0.0/16
	 neighbor 192.168.1.2 remote-as 65100
	 neighbor 192.168.1.2 next-hop-self
	 neighbor 192.168.1.2 route-map interno out 
	 neighbor 192.168.1.6 remote-as 65100
	 neighbor 192.168.1.6 next-hop-self
	 neighbor 192.168.1.2 route-map interno out
	 neighbor 200.130.0.1 remote-as 65300
	!
	route-map interno permit 10
	 match as-path 1
	 set local-preference 300
	
	route-map interno permit 20
	 match as-path 2
	}
    }
    services {zebra OSPFv2 BGP vtysh IPForward}
    interface-peer {eth3 n57}
}

node n3 {
    type router
    model router
    network-config {
	hostname 100-0-C
	!
	interface eth5
	 ip address 200.130.0.17/30
	!
	interface eth4
	 ip address 200.130.0.13/30
	!
	interface eth3
	 ip address 192.168.3.18/30
	!
	interface eth2
	 ip address 192.168.1.10/30
	!
	interface eth0
	 ip address 192.168.1.14/30
	!
	interface eth1
	 ip address 192.168.1.6/30
	!
    }
    canvas c1
    iconcoords {585.3333333333334 603.3333333333334}
    labelcoords {581.3333333333334 660.6666666666666}
    interface-peer {eth0 n5}
    interface-peer {eth1 n2}
    interface-peer {eth2 n1}
    interface-peer {eth3 n10}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.1.14/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.1.6/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 192.168.1.10/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth3
	 ip address 192.168.3.18/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth4
	 ip address 200.130.0.13/30
	!
	interface eth5
	 ip address 200.130.0.17/30
	!
	router ospf
	  router-id 192.168.1.10
	  redistribute bgp
	  network 192.168.1.8/30 area 0
	  network 192.168.1.4/30 area 0
	  network 192.168.1.12/30 area 0
	  network 192.168.3.16/30 area 0
	  area 0 authentication message-digest
	  area 2 authentication message-digest
	!
	ip as-path access-list 1 permit ^$
	ip as-path access-list 1 permit ^65200_
	ip as-path access-list 2 permit ^$
	ip as-path access-list 2 permit ^65000_
	!
	router bgp 65100
	 network 10.1.0.0/16
	 bgp router-id 192.168.1.10
	 neighbor 192.168.1.9 remote-as 65100
	 neighbor 192.168.1.9 next-hop-self
	 neighbor 192.168.1.5 remote-as 65100
	 neighbor 192.168.1.5 next-hop-self
	 neighbor 200.130.0.14 remote-as 65200
	 neighbor 200.130.0.14 route-map adv001 out
	 neighbor 200.130.0.18 remote-as 65000
	 neighbor 200.130.0.18 route-map adv000 out
	!
	route-map adv000 permit 10
	 match as-path 1
	!
	route-map adv001 permit 20
	 match as-path 2
	!
	}
    }
    services {zebra OSPFv2 BGP vtysh IPForward}
    interface-peer {eth4 n39}
    interface-peer {eth5 n26}
}

node n4 {
    type router
    model router
    network-config {
	hostname 100-0-E
	!
	interface eth2
	 ip address 192.168.1.17/30
	!
	interface eth0
	 ip address 192.168.2.18/30
	!
	interface eth1
	 ip address 192.168.1.21/30
	!
    }
    canvas c1
    iconcoords {281.0 600.0}
    labelcoords {281.0 632.0}
    interface-peer {eth0 n7}
    interface-peer {eth1 n2}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.2.18/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.1.21/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 192.168.1.17/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	router ospf
	  router-id 192.168.2.18
	  network 192.168.2.16/30 area 0
	  network 192.168.1.16/30 area 0
	  network 192.168.1.20/30 area 0
	  area 0 authentication message-digest
	  area 1 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n5 {
    type router
    model router
    network-config {
	hostname 100-0-D
	!
	interface eth1
	 ip address 192.168.1.13/30
	!
	interface eth0
	 ip address 192.168.1.18/30
	!
    }
    canvas c1
    iconcoords {436.0 630.0}
    labelcoords {436.0 662.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.1.18/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.1.13/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	router ospf
	  router-id 192.168.1.18
	  network 192.168.1.12/30 area 0
	  network 192.168.1.16/30 area 0
	  area 0 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n6 {
    type router
    model router
    network-config {
	hostname 100-1-A
	!
	interface eth0
	 ip address 192.168.2.14/30
	!
	interface eth1
	 ip address 192.168.2.1/30
	!
	interface eth2
	 ip address 10.1.1.1/27
	!
    }
    canvas c1
    iconcoords {136.0 797.0}
    labelcoords {136.0 829.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n7}
    interface-peer {eth2 n14}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.2.14/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.2.1/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 10.1.1.1/27
	
	!
	router ospf
	  router-id 192.168.2.14
	  network 192.168.2.12/30 area 1
	  network 192.168.2.0/30 area 1
	  network 10.1.1.0/27 area 1
	  area 1 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n7 {
    type router
    model router
    network-config {
	hostname 100-1-D
	!
	interface eth2
	 ip address 192.168.2.17/30
	!
	interface eth1
	 ip address 192.168.2.5/30
	!
	interface eth0
	 ip address 192.168.2.2/30
	!
    }
    canvas c1
    iconcoords {296.0 788.0}
    labelcoords {296.0 820.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n9}
    interface-peer {eth2 n4}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.2.2/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.2.4/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 192.168.2.13/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	router ospf
	  router-id 192.168.2.2
	  network 192.168.2.0/30 area 1
	  network 192.168.2.4/30 area 1
	  network 192.168.2.16/30 area 0
	  area 1 authentication message-digest
	  area 0 authentication message-digest 
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n8 {
    type router
    model router
    network-config {
	hostname 100-1-B
	!
	interface eth1
	 ip address 192.168.2.9/30
	!
	interface eth0
	 ip address 192.168.2.13/30
	!
	interface eth2
	 ip address 10.1.1.33/27
	!
    }
    canvas c1
    iconcoords {136.0 920.0}
    labelcoords {136.0 952.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n9}
    interface-peer {eth2 n15}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.2.13/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.2.9/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	  ip address 10.1.1.33/27
	!
	router ospf
	  router-id 192.168.2.9
	  network 192.168.2.12/30 area 1
	  network 192.168.2.8/30 area 1
	  network 10.1.1.32/27 area 1
	  area 1 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n9 {
    type router
    model router
    network-config {
	hostname 100-1-C
	!
	interface eth1
	 ip address 192.168.2.6/30
	!
	interface eth0
	 ip address 192.168.2.10/30
	!
	interface eth2
	 ip address 10.1.1.65/27
	!
    }
    canvas c1
    iconcoords {302.0 923.0}
    labelcoords {302.0 955.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n7}
    interface-peer {eth2 n16}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.2.10/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.2.6/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	  ip address 10.1.1.65/27
	!
	router ospf
	  router-id 192.168.2.10
	  network 192.168.2.8/30 area 1
	  network 192.168.2.4/30 area 1
	  network 10.1.1.64/27 area 1
	  area 1 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n10 {
    type router
    model router
    network-config {
	hostname 100-2-D
	!
	interface eth2
	 ip address 192.168.3.14/30
	!
	interface eth0
	 ip address 192.168.3.17/30
	!
	interface eth1
	 ip address 192.168.3.1/30
	!
    }
    canvas c1
    iconcoords {557.0 787.0}
    labelcoords {557.0 819.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n11}
    interface-peer {eth2 n12}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.3.17/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.3.1/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 192.168.3.14/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	router ospf
	  router-id 192.168.3.17
	  network 192.168.3.16/30 area 0
	  network 192.168.3.0/30 area 2
	  network 192.168.3.12/30 area 2
	  area 0 authentication message-digest
	  area 2 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n11 {
    type router
    model router
    network-config {
	hostname 100-2-A
	!
	interface eth1
	 ip address 192.168.3.5/30
	!
	interface eth0
	 ip address 192.168.3.2/30
	!
	interface eth2
	 ip address 10.1.2.1/27
	!
    }
    canvas c1
    iconcoords {720.0 784.0}
    labelcoords {720.0 816.0}
    interface-peer {eth0 n10}
    interface-peer {eth1 n13}
    interface-peer {eth2 n19}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.3.2/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.3.5/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	 ip address 10.1.2.1/27
	!
	router ospf
	  router-id 192.168.3.5
	  network 192.168.3.0/30 area 2
	  network 192.168.3.4/30 area 2
	  network 10.1.2.0/27 area 2
	  area 2 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n12 {
    type router
    model router
    network-config {
	hostname 100-2-C
	!
	interface eth1
	 ip address 192.168.3.13/30
	!
	interface eth0
	 ip address 192.168.3.9/30
	!
	interface eth2
	 ip address 10.1.2.65/27
	!
    }
    canvas c1
    iconcoords {568.0 907.0}
    labelcoords {568.0 939.0}
    interface-peer {eth0 n13}
    interface-peer {eth1 n10}
    interface-peer {eth2 n17}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.3.9/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.3.13/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	  ip address 10.1.2.65/27
	!
	router ospf
	  router-id 192.168.3.13
	  network 192.168.3.8/30 area 2
	  network 192.168.3.12/30 area 2
	  network 10.1.2.64/27 area 2
	  area 2 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n13 {
    type router
    model router
    network-config {
	hostname 100-2-B
	!
	interface eth1
	 ip address 192.168.3.10/30
	!
	interface eth0
	 ip address 192.168.3.6/30
	!
	interface eth2
	 ip address 10.1.2.33/27
	!
    }
    canvas c1
    iconcoords {725.0 895.0}
    labelcoords {725.0 927.0}
    interface-peer {eth0 n11}
    interface-peer {eth1 n12}
    interface-peer {eth2 n18}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	 ip address 192.168.3.6/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth1
	 ip address 192.168.3.10/30
	 ip ospf authentication message-digest
	 ip ospf message-digest-key 1 md5 REDES2
	!
	interface eth2
	  ip address 10.1.2.33/27
	!
	router ospf
	  router-id 192.168.3.6
	  network 192.168.3.4/30 area 2
	  network 192.168.3.8/30 area 2
	  network 10.1.2.32/27 area 2
	  area 2 authentication message-digest
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n14 {
    type lanswitch
    network-config {
	hostname n14
	!
    }
    canvas c1
    iconcoords {51.0 743.0}
    labelcoords {51.0 767.0}
    interface-peer {e0 n20}
    interface-peer {e1 n6}
}

node n15 {
    type lanswitch
    network-config {
	hostname n15
	!
    }
    canvas c1
    iconcoords {36.0 979.0}
    labelcoords {36.0 1003.0}
    interface-peer {e0 n21}
    interface-peer {e1 n8}
}

node n16 {
    type lanswitch
    network-config {
	hostname n16
	!
    }
    canvas c1
    iconcoords {355.0 986.0}
    labelcoords {355.0 1010.0}
    interface-peer {e0 n22}
    interface-peer {e1 n9}
}

node n17 {
    type lanswitch
    network-config {
	hostname n17
	!
    }
    canvas c1
    iconcoords {574.0 960.0}
    labelcoords {574.0 984.0}
    interface-peer {e0 n23}
    interface-peer {e1 n12}
}

node n18 {
    type lanswitch
    network-config {
	hostname n18
	!
    }
    canvas c1
    iconcoords {740.0 992.0}
    labelcoords {740.0 1016.0}
    interface-peer {e0 n24}
    interface-peer {e1 n13}
}

node n19 {
    type lanswitch
    network-config {
	hostname n19
	!
    }
    canvas c1
    iconcoords {793.0 763.0}
    labelcoords {793.0 787.0}
    interface-peer {e0 n25}
    interface-peer {e1 n11}
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	 ip address 10.1.1.2/27
	!
    }
    canvas c1
    iconcoords {48.0 646.0}
    labelcoords {48.0 678.0}
    interface-peer {eth0 n14}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.1
	}
    }
    services {DefaultRoute}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	 ip address 10.1.1.34/27
	!
    }
    canvas c1
    iconcoords {115.0 992.0}
    labelcoords {115.0 1024.0}
    interface-peer {eth0 n15}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.33
	}
    }
}

node n22 {
    type router
    model PC
    network-config {
	hostname n22
	!
	interface eth0
	 ip address 10.1.1.66/27
	!
    }
    canvas c1
    iconcoords {234.0 986.0}
    labelcoords {234.0 1018.0}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.65
	
	
	}
    }
    services {DefaultRoute}
}

node n23 {
    type router
    model PC
    network-config {
	hostname n23
	!
	interface eth0
	 ip address 10.1.2.66/27
	!
    }
    canvas c1
    iconcoords {466.0 990.0}
    labelcoords {466.0 1022.0}
    interface-peer {eth0 n17}
}

node n24 {
    type router
    model PC
    network-config {
	hostname n24
	!
	interface eth0
	 ip address 10.1.2.34/27
	!
    }
    canvas c1
    iconcoords {826.0 977.0}
    labelcoords {826.0 1009.0}
    interface-peer {eth0 n18}
}

node n25 {
    type router
    model PC
    network-config {
	hostname n25
	!
	interface eth0
	 ip address 10.1.2.2/27
	!
    }
    canvas c1
    iconcoords {916.0 725.0}
    labelcoords {916.0 757.0}
    interface-peer {eth0 n19}
}

node n26 {
    type router
    model router
    network-config {
	hostname n26
	!
	interface eth3
	 ip address 200.130.0.18/30
	!
	interface eth2
	 ip address 200.130.0.21/30
	!
	interface eth1
	 ip address 192.168.0.14/30
	!
	interface eth0
	 ip address 192.168.0.1/30
	!
    }
    canvas c1
    iconcoords {1152.0 560.0}
    labelcoords {1152.0 592.0}
    interface-peer {eth0 n27}
    interface-peer {eth1 n28}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.1/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth1
	  ip address 192.168.0.14/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth2
	 ip address 200.130.0.21/30
	!
	interface eth3
	 ip address 200.130.0.18/30
	!
	ip as-path access-list 1 permit ^$
	!
	router rip
	  network 10.0.0.0/16
	  redistribute bgp
	  network 192.168.0.0/30
	  network 192.168.0.12/30
	!
	router bgp 65000
	 network 10.0.0.0/16
	 neighbor 200.130.0.22 remote-as 65200
	 neighbor 200.130.0.22 route-map mapa out
	 neighbor 200.130.0.17 remote-as 65100
	 neighbor 200.130.0.17 route-map mapa out
	!
	 route-map mapa permit 10
	 match as-path 1
	 
	!
	
	}
    }
    services {zebra BGP RIP vtysh IPForward}
    interface-peer {eth2 n39}
    interface-peer {eth3 n3}
}

node n27 {
    type router
    model router
    network-config {
	hostname n27
	!
	interface eth1
	 ip address 192.168.0.5/30
	!
	interface eth0
	 ip address 192.168.0.2/30
	!
	interface eth2
	 ip address 10.0.0.33/27
	!
    }
    canvas c1
    iconcoords {1390.0 559.0}
    labelcoords {1390.0 591.0}
    interface-peer {eth0 n26}
    interface-peer {eth1 n29}
    interface-peer {eth2 n33}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.2/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth1
	  ip address 192.168.0.5/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth2
	  ip address 10.0.0.33/27
	!
	router rip
	  network 10.0.0.32/27
	  network 192.168.0.0/30
	  network 192.168.0.4/30
	!
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n28 {
    type router
    model router
    network-config {
	hostname n28
	!
	interface eth1
	 ip address 192.168.0.13/30
	!
	interface eth0
	 ip address 192.168.0.10/30
	!
	interface eth2
	 ip address 10.0.0.97/27
	!
    }
    canvas c1
    iconcoords {1150.0 763.0}
    labelcoords {1150.0 795.0}
    interface-peer {eth0 n29}
    interface-peer {eth1 n26}
    interface-peer {eth2 n31}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.10/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth1
	  ip address 192.168.0.13/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth2
	  ip address 10.0.0.97/27
	!
	router rip
	  network 10.0.0.96/27
	  network 192.168.0.8/30
	  network 192.168.0.12/30
	!
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n29 {
    type router
    model router
    network-config {
	hostname n29
	!
	interface eth1
	 ip address 192.168.0.9/30
	!
	interface eth0
	 ip address 192.168.0.6/30
	!
	interface eth2
	 ip address 10.0.0.65/27
	!
    }
    canvas c1
    iconcoords {1390.0 765.0}
    labelcoords {1390.0 797.0}
    interface-peer {eth0 n27}
    interface-peer {eth1 n28}
    interface-peer {eth2 n32}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.6/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth1
	  ip address 192.168.0.9/30
	  ip rip authentication mode md5
	  ip rip authentication string MIETI17
	!
	interface eth2
	  ip address 10.0.0.65/27
	!
	router rip
	  network 10.0.0.64/27
	  network 192.168.0.4/30
	  network 192.168.0.8/30
	!
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n31 {
    type lanswitch
    network-config {
	hostname n31
	!
    }
    canvas c1
    iconcoords {1081.0 797.0}
    labelcoords {1081.0 821.0}
    interface-peer {e0 n28}
    interface-peer {e1 n34}
}

node n32 {
    type lanswitch
    network-config {
	hostname n32
	!
    }
    canvas c1
    iconcoords {1454.0 808.0}
    labelcoords {1454.0 832.0}
    interface-peer {e0 n29}
    interface-peer {e1 n37}
}

node n33 {
    type lanswitch
    network-config {
	hostname n33
	!
    }
    canvas c1
    iconcoords {1462.0 500.0}
    labelcoords {1462.0 524.0}
    interface-peer {e0 n27}
    interface-peer {e1 n36}
}

node n34 {
    type router
    model PC
    network-config {
	hostname n34
	!
	interface eth0
	 ip address 10.0.0.98/27
	!
    }
    canvas c1
    iconcoords {1040.0 829.0}
    labelcoords {1040.0 861.0}
    interface-peer {eth0 n31}
}

node n36 {
    type router
    model PC
    network-config {
	hostname n36
	!
	interface eth0
	 ip address 10.0.0.34/27
	!
    }
    canvas c1
    iconcoords {1506.0 465.0}
    labelcoords {1506.0 497.0}
    interface-peer {eth0 n33}
}

node n37 {
    type router
    model PC
    network-config {
	hostname n37
	!
	interface eth0
	 ip address 10.0.0.66/27
	!
    }
    canvas c1
    iconcoords {1493.0 837.0}
    labelcoords {1493.0 869.0}
    interface-peer {eth0 n32}
}

node n39 {
    type router
    model router
    network-config {
	hostname n39
	!
	interface eth6
	 ip address 10.2.0.65/27
	!
	interface eth3
	 ip address 200.130.0.25/30
	!
	interface eth5
	 ip address 200.130.0.30/30
	!
	interface eth2
	 ip address 200.130.0.14/30
	!
	interface eth4
	 ip address 200.130.0.22/30
	!
    }
    canvas c1
    iconcoords {1090.0 297.0}
    labelcoords {1090.0 329.0}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.2.9/30
	!
	interface eth1
	  ip address 192.168.2.6/30
	!
	interface eth2
	 ip address 200.130.0.14/30
	!
	interface eth3
	 ip address 200.130.0.25/30
	!
	interface eth4
	 ip address 200.130.0.22/30
	!
	interface eth5
	 ip address 200.130.0.30/30
	!
	interface eth6
	 ip address 10.2.0.65/27
	!
	ip as-path access-list 1 permit .*
	ip as-path access-list 2 permit ^$
	ip as-path access-list 2 permit ^65000_
	ip as-path access-list 2 permit ^65100_
	!
	router bgp 65200
	network 10.2.0.0/16
	neighbor 200.130.0.29 remote-as 65300
	neighbor 200.130.0.29 route-map mapan out
	neighbor 200.130.0.21 remote-as 65000
	neighbor 200.130.0.21 route-map mapan out
	neighbor 200.130.0.13 remote-as 65100
	neighbor 200.130.0.13 route-map mapan out
	neighbor 200.130.0.26 remote-as 65400
	neighbor 200.130.0.26 route-map mapap out
	!
	 route-map mapan permit 10
	 match as-path 1
	!
	 route-map mapap permit 20
	 match as-path 2
	!
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	}
    }
    services {zebra BGP vtysh IPForward}
    interface-peer {eth4 n26}
    interface-peer {eth2 n3}
    interface-peer {eth5 n58}
    interface-peer {eth3 n48}
    interface-peer {eth6 n42}
}

node n48 {
    type router
    model router
    network-config {
	hostname n48
	!
	interface eth4
	 ip address 10.4.0.65/27
	!
	interface eth3
	 ip address 200.130.0.26/30
	!
	interface eth2
	 ip address 200.130.0.10/30
	!
    }
    canvas c1
    iconcoords {738.0 233.0}
    labelcoords {738.0 265.0}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.4.9/30
	!
	interface eth1
	  ip address 192.168.4.6/30
	!
	interface eth2
	  ip address 200.130.0.10/30
	!
	interface eth3
	 ip address 200.130.0.26/30
	!
	interface eth4
	 ip address 10.4.0.65/27
	!
	ip as-path access-list 1 permit ^65300 65100$
	ip as-path access-list 2 permit _*
	!
	router bgp 65400
	 network 10.4.0.0/16
	 neighbor 200.130.0.9 remote-as 65300
	 neighbor 200.130.0.9 route-map interno in
	 neighbor 200.130.0.25 remote-as 65200
	!
	route-map interno permit 10
	 match as-path 1
	 set local-preference 300
	!
	route-map interno permit 20
	 match as-path 2
	 set local-preference 100
	
	
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	}
    }
    services {zebra BGP vtysh IPForward}
    interface-peer {eth2 n58}
    interface-peer {eth3 n39}
    interface-peer {eth4 n35}
}

node n57 {
    type router
    model router
    network-config {
	hostname n57
	!
	interface eth0
	 ip address 10.3.0.2/27
	!
	interface eth2
	 ip address 200.130.0.1/30
	!
	interface eth1
	 ip address 192.168.3.6/30
	!
    }
    canvas c1
    iconcoords {218.0 309.0}
    labelcoords {218.0 341.0}
    interface-peer {eth1 n58}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.3.0.2/27
	!
	interface eth1
	  ip address 192.168.3.6/30
	!
	interface eth2
	  ip address 10.3.0.65/27
	!
	interface eth2
	 ip address 200.130.0.1/30
	!
	ip route 10.3.0.32/27 192.168.3.5
	!
	ip as-path access-list 1 deny _65100 65000$
	ip as-path access-list 1 permit _*
	!
	route-map interno permit 10
	 match as-path 1
	!
	ip forwarding
	!
	ip as-path access-list 1 permit _65100$
	ip as-path access-list 2 deny _*
	!
	router bgp 65300
	 network 10.3.0.0/16
	 neighbor 192.168.3.5 remote-as 65300
	 neighbor 192.168.3.5 next-hop-self
	 neighbor 192.168.3.5 route-map interno out
	 neighbor 200.130.0.2 remote-as 65100
	!
	route-map interno permit 10
	 match as-path 1
	 set local-preference 300
	!
	route-map interno permit 20
	 match as-path 2
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	}
    }
    services {zebra BGP vtysh IPForward}
    interface-peer {eth2 n2}
    interface-peer {eth0 n38}
}

node n58 {
    type router
    model router
    network-config {
	hostname n58
	!
	interface eth5
	 ip address 10.3.0.33/27
	!
	interface eth3
	 ip address 200.130.0.9/30
	!
	interface eth4
	 ip address 200.130.0.29/30
	!
	interface eth2
	 ip address 200.130.0.5/30
	!
	interface eth0
	 ip address 192.168.3.5/30
	!
    }
    canvas c1
    iconcoords {409.0 276.0}
    labelcoords {409.0 308.0}
    interface-peer {eth0 n57}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.3.5/30
	!
	interface eth1
	  ip address 192.168.3.2/30
	!
	interface eth2
	 ip address 200.130.0.5/30
	!
	interface eth3
	 ip address 200.130.0.9/30
	!
	interface eth4
	 ip address 200.130.0.29/30
	!
	interface eth5
	 ip address 10.3.0.33/27
	!
	ip route 10.3.0.0/27 192.168.3.6
	!
	ip as-path access-list 1 deny _65100 65000$
	ip as-path access-list 1 permit _*
	ip as-path access-list 2 deny _65100$
	ip as-path access-list 3 permit _*
	!
	router bgp 65300
	 bgp router-id 200.130.0.29
	 network 10.3.0.0/16
	 neighbor 192.168.3.6 remote-as 65300
	 neighbor 192.168.3.6 next-hop-self
	 neighbor 192.168.3.6 route-map interno out
	 neighbor 200.130.0.6 remote-as 65100
	 neighbor 200.130.0.6 route-map lista out
	 neighbor 200.130.0.10 remote-as 65400
	 neighbor 200.130.0.10 route-map lista out
	 neighbor 200.130.0.30 remote-as 65200
	 neighbor 200.130.0.30 route-map lista out
	!
	 route-map lista permit 10
	 match as-path 1
	!
	route-map interno permit 20
	 match as-path 2
	 set local-preference 300
	!
	route-map interno permit 30
	 match as-path 3
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	}
    }
    services {zebra BGP vtysh IPForward}
    interface-peer {eth2 n1}
    interface-peer {eth4 n39}
    interface-peer {eth3 n48}
    interface-peer {eth5 n30}
}

node n30 {
    type lanswitch
    network-config {
	hostname n30
	!
    }
    canvas c1
    iconcoords {347.0 183.0}
    labelcoords {347.0 207.0}
    interface-peer {e0 n58}
    interface-peer {e1 n44}
}

node n35 {
    type lanswitch
    network-config {
	hostname n35
	!
    }
    canvas c1
    iconcoords {724.0 156.0}
    labelcoords {724.0 180.0}
    interface-peer {e0 n48}
    interface-peer {e1 n51}
}

node n42 {
    type lanswitch
    network-config {
	hostname n42
	!
    }
    canvas c1
    iconcoords {1216.0 193.0}
    labelcoords {1216.0 217.0}
    interface-peer {e0 n39}
    interface-peer {e1 n53}
}

node n44 {
    type router
    model PC
    network-config {
	hostname n44
	!
	interface eth0
	 ip address 10.3.0.34/27
	!
    }
    canvas c1
    iconcoords {279.0 81.0}
    labelcoords {279.0 113.0}
    interface-peer {eth0 n30}
}

node n51 {
    type router
    model PC
    network-config {
	hostname n51
	!
	interface eth0
	 ip address 10.4.0.66/27
	!
    }
    canvas c1
    iconcoords {726.0 82.0}
    labelcoords {726.0 114.0}
    interface-peer {eth0 n35}
}

node n53 {
    type router
    model PC
    network-config {
	hostname n53
	!
	interface eth0
	 ip address 10.2.0.66/27
	!
    }
    canvas c1
    iconcoords {1264.0 119.0}
    labelcoords {1264.0 151.0}
    interface-peer {eth0 n42}
}

node n38 {
    type lanswitch
    network-config {
	hostname n38
	!
    }
    canvas c1
    iconcoords {146.0 196.0}
    labelcoords {146.0 220.0}
    interface-peer {e0 n40}
    interface-peer {e1 n57}
}

node n40 {
    type router
    model host
    network-config {
	hostname n40
	!
	interface eth0
	 ip address 10.3.0.1/27
	!
    }
    canvas c1
    iconcoords {97.0 138.0}
    labelcoords {97.0 170.0}
    interface-peer {eth0 n38}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.3.0.2
	
	}
    }
    services {IPForward DefaultRoute SSH}
}

link l1 {
    nodes {n6 n8}
    bandwidth 0
}

link l2 {
    nodes {n8 n9}
    bandwidth 0
}

link l3 {
    nodes {n6 n7}
    bandwidth 0
}

link l4 {
    nodes {n7 n9}
    bandwidth 0
}

link l5 {
    nodes {n7 n4}
    bandwidth 0
}

link l6 {
    nodes {n4 n2}
    bandwidth 0
}

link l7 {
    nodes {n4 n5}
    bandwidth 0
}

link l8 {
    nodes {n5 n3}
    bandwidth 0
}

link l9 {
    nodes {n2 n3}
    bandwidth 0
}

link l10 {
    nodes {n3 n1}
    bandwidth 0
}

link l11 {
    nodes {n10 n3}
    bandwidth 0
}

link l12 {
    nodes {n10 n11}
    bandwidth 0
}

link l13 {
    nodes {n11 n13}
    bandwidth 0
}

link l14 {
    nodes {n13 n12}
    bandwidth 0
}

link l15 {
    nodes {n10 n12}
    bandwidth 0
}

link l16 {
    nodes {n2 n1}
    bandwidth 0
}

link l17 {
    nodes {n20 n14}
    bandwidth 0
}

link l18 {
    nodes {n14 n6}
    bandwidth 0
}

link l19 {
    nodes {n21 n15}
    bandwidth 0
}

link l20 {
    nodes {n15 n8}
    bandwidth 0
}

link l21 {
    nodes {n22 n16}
    bandwidth 0
}

link l22 {
    nodes {n16 n9}
    bandwidth 0
}

link l23 {
    nodes {n23 n17}
    bandwidth 0
}

link l24 {
    nodes {n17 n12}
    bandwidth 0
}

link l25 {
    nodes {n24 n18}
    bandwidth 0
}

link l26 {
    nodes {n18 n13}
    bandwidth 0
}

link l27 {
    nodes {n25 n19}
    bandwidth 0
}

link l28 {
    nodes {n19 n11}
    bandwidth 0
}

link l29 {
    nodes {n26 n27}
    bandwidth 0
}

link l30 {
    nodes {n27 n29}
    bandwidth 0
}

link l31 {
    nodes {n29 n28}
    bandwidth 0
}

link l32 {
    nodes {n28 n26}
    bandwidth 0
}

link l34 {
    nodes {n27 n33}
    bandwidth 0
}

link l35 {
    nodes {n29 n32}
    bandwidth 0
}

link l36 {
    nodes {n28 n31}
    bandwidth 0
}

link l38 {
    nodes {n34 n31}
    bandwidth 0
}

link l39 {
    nodes {n32 n37}
    bandwidth 0
}

link l40 {
    nodes {n33 n36}
    bandwidth 0
}

link l62 {
    nodes {n57 n58}
    bandwidth 0
}

link l33 {
    nodes {n2 n57}
    bandwidth 0
}

link l37 {
    nodes {n1 n58}
    bandwidth 0
}

link l57 {
    nodes {n39 n26}
    bandwidth 0
}

link l44 {
    nodes {n3 n39}
    bandwidth 0
}

link l63 {
    nodes {n3 n26}
    bandwidth 0
}

link l64 {
    nodes {n58 n39}
    bandwidth 0
}

link l47 {
    nodes {n58 n48}
    bandwidth 0
}

link l54 {
    nodes {n48 n39}
    bandwidth 0
}

link l66 {
    nodes {n58 n30}
    bandwidth 0
}

link l67 {
    nodes {n48 n35}
    bandwidth 0
}

link l68 {
    nodes {n39 n42}
    bandwidth 0
}

link l69 {
    nodes {n30 n44}
    bandwidth 0
}

link l70 {
    nodes {n42 n53}
    bandwidth 0
}

link l71 {
    nodes {n35 n51}
    bandwidth 0
}

link l41 {
    nodes {n40 n38}
    bandwidth 0
}

link l42 {
    nodes {n38 n57}
    bandwidth 0
}

annotation a1 {
    iconcoords {381.0 684.0}
    type text
    label {Area 0 - Backbone}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a2 {
    iconcoords {180.0 974.0}
    type text
    label {Area 1}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {188.0 968.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {606.0 974.0}
    type text
    label {Area 2}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a6 {
    iconcoords {1 415 945 1021}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a7 {
    iconcoords {966 416 1587 992}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #19c0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a10 {
    iconcoords {518 7 960 349}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #9e8cff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a11 {
    iconcoords {1007 3 1572 343}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #d6c0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a5 {
    iconcoords {842.6666666666666 445.0}
    type text
    label {AS65100}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a9 {
    iconcoords {28.0 344.0}
    type text
    label {AS65300}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a12 {
    iconcoords {740.0 336.0}
    type text
    label {AS65400}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a13 {
    iconcoords {1478.0 322.0}
    type text
    label {AS65200}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a14 {
    iconcoords {1513.0 962.0}
    type text
    label {AS65000}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a15 {
    type text
    iconcoords {292.0 499.0}
    label {}
    canvas c1
}

annotation a8 {
    iconcoords {8 25 493 351}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border #00008c
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1920 1024}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

