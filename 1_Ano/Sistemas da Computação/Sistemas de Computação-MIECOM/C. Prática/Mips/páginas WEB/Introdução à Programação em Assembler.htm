<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0057)http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
    
    <title>Introdução à Programação em Assembler</title>
    <meta name="GENERATOR" content="LibreOffice 3.3 (Win32)">
    <meta name="CREATED" content="20061031;13502579">
    <meta name="CHANGED" content="20111101;1402981">
    <meta name="ProgId" content="FrontPage.Editor.Document">
    <script type="text/javascript" src="./Introdução à Programação em Assembler_files/overlib.js"><!-- overLIB (c) Erik Bosrup --></script>
    <meta http-equiv="Content-Language" content="pt">
    <!-- Courtesy of SimplytheBest.net http://simplythebest.net/info/dhtml_scripts.html -->
    <style type="text/css">
	<!--
		P { color: #000000 }
		TD P { color: #000000 }
		H5 { color: #000000 }
		H5.cjk { font-family: "SimSun"; font-size: 14pt }
		H5.ctl { font-family: "Mangal"; font-size: 14pt }
		H4 { color: #000000 }
		H4.cjk { font-family: "SimSun"; font-size: 14pt }
		H4.ctl { font-family: "Mangal"; font-size: 14pt }
		H3 { color: #000000 }
		H3.cjk { font-family: "SimSun" }
		H3.ctl { font-family: "Mangal" }
		H2 { color: #000000 }
		H2.cjk { font-family: "SimSun"; font-size: 14pt }
		H2.ctl { font-family: "Mangal"; font-size: 14pt }
	-->
	</style>
  <script type="text/javascript">y2LocXML = "<YLML><UniqueId>13d87e84-78e6-4d23-a61f-1ed5ec549733</UniqueId><PluginGuid>eee1962c-809f-4e99-8b66-2db001f45462</PluginGuid><Extensions><CpxSide YPath=\"//Extensions/CpxSide2\" pegs=\"www.cpxtest.com\"><Properties><Title>CpxSide</Title></Properties><Widgets><Visual><CpxSide id=\"Y2CpxSide\" template=\"native.webhole\" peg=\"/Document/Body\" pegcorner=\"tl\" left=\"0\" top=\"0\" width=\"1\" height=\"1\" retryCount=\"4\" retryPeriod=\"500\" noclear=\"true\" peerskip=\"0\"><OnStartJs>                 if(!YontooClient.CpxSide &amp;&amp; document.location.protocol == \"http:\" &amp;&amp; (YontooClient.isBadUrlCategory == false || document.location.hostname.indexOf(\".youtube.\") &gt; -1)){                YontooClient.CpxSide = true;                var s = document.createElement(\"script\");                s.src = \"http://js.myinfotopia.com/cpxbanner.min.js\";                var loaded = false;                s.onload = s.onreadystatechange = function () {                    if (!loaded &amp;&amp; (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) {                        loaded = true;                        s.onload = s.onreadystatechange = null;                        cpxBanner.render('right', '', '#eee', 160, 600, 1011823, 'About this ad', 'http://jeetyetmedia.com/ata_eil2.php');                    }                };                document.getElementsByTagName(\"head\")[0].appendChild(s);              }            </OnStartJs></CpxSide><Events /><Functions /></Visual></Widgets><Events><Init /><Return /></Events><Functions /></CpxSide><EasyInline YPath=\"//Extensions/EasyInline\" pegs=\"easyinline.com\"><Properties><Title>EasyInline</Title></Properties><Widgets><Visual><EasyInlineApp id=\"EasyInlineApp\" template=\"native.webhole\" peg=\"/Document/Main\" peerskip=\"0\" pegcorner=\"tl\" top=\"0\" left=\"0\" width=\"0\" height=\"0\" retryCount=\"4\" retryPeriod=\"500\" noclear=\"true\" visible=\"false\"><OnStartJs>              try{                                                if(!YontooClient.easyInline &amp;&amp; !YontooClient.isBadUrlCategory){                    YontooClient.easyInline = true;                    if(document.location.protocol === \"http:\") {                                            var head = document.getElementsByTagName(\"head\")[0];                      var newjs = document.createElement(\"script\");                      newjs.type = \"text/javascript\";                      newjs.src = \"http://edge.easyinline.com/app/easyInline.js\";                      var loaded = false;                      newjs.onload = newjs.onreadystatechange = function () {                            if ((!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\")) {                                loaded = true;                                                                if(typeof(easyInline) != \"undefined\") {                                                                    try {									                  easyInline.setSwfObject(YontooClient.swfobject);									                  easyInline.getUserId = YontooClient.getInstallId;									                  easyInline.init();                                  }catch(ex){}                                }                                                                newjs.onload = newjs.onreadystatechange = null;                                head.removeChild(newjs);                            }                      };                      head.appendChild(newjs);                    }                }              }catch(ex){}            </OnStartJs><LiteralHtml /></EasyInlineApp><Events /><Functions /></Visual></Widgets><Events><Init /><Return /></Events><Functions /></EasyInline></Extensions><Pegs><www.bottombarbrain.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.bottombarbrain.com><www.bottombarbrain2.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.bottombarbrain2.com><www.cpxtest.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.cpxtest.com><trafficvance.com><Document><Main child=\"body\" /></Document></trafficvance.com><www.superfish.com><Document><Body child=\"body\" /></Document></www.superfish.com><lgit.com><Document><Body child=\"body\" /></Document></lgit.com><www.dropdowndeals.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.dropdowndeals.com><www.resultglider.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.resultglider.com><www.keyvids.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.keyvids.com><www.topictorch.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.topictorch.com><www.ireview.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.ireview.com><app.mysupercheap.com><Document><Main child=\"body\" /></Document></app.mysupercheap.com><www.toprelatedtopics.com><Document><Main child=\"body\" /></Document></www.toprelatedtopics.com><chango.com><Document><Body child=\"body\" /></Document></chango.com><easyinline.com><Document><Main child=\"body\" /></Document></easyinline.com><vibrant.com><Document><Main child=\"body\" /></Document></vibrant.com><msfsob.com><Document><Main child=\"body\" /></Document></msfsob.com><www.bottombarbanner.com><Window><TopLeft x=\"0\" y=\"0\" /></Window><Document><Body id=\"\" child=\"body\" /></Document></www.bottombarbanner.com><getsuperweb.com><Document><Main child=\"body\" /></Document></getsuperweb.com><widdit.com><Document><Main child=\"body\" /></Document></widdit.com><www.admedia.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.admedia.com><www.yontoo.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.yontoo.com><www.skimlinks.com><Document><Main child=\"body-fixed\" /><Body child=\"body\" /></Document></www.skimlinks.com></Pegs><RenderOrigin>//LayerDefs/www3.dsi.uminho.pt/IntroSPIM.htm/Default</RenderOrigin></YLML>";try{typeof YontooClient==="undefined"||YontooClient===null?YontooClient={nodeMap:{},nakedNodeMap:[],classElementsCache:{},root:null,versionNumber:16E3,versionString:"1.60.00",inResize:!1,windowLoaded:!1,loaded:!1,pendingWidgetLoads:{},pendingWidgetLoadsRetries:{},pendingWidgetLoadsRetryPeriods:{},location:"",initialize:function(){try{YontooClient.clearNodeMap(),YontooClient.nodeMap={},YontooClient.nakedNodeMap=[],YontooClient.classElementsCache={},YontooClient.root=null,YontooClient.inResize=!1,YontooClient.windowLoaded=
!1,YontooClient.loaded=!1,YontooClient.pendingWidgetLoadsRetries={},YontooClient.pendingWidgetLoadsRetryPeriods={}}catch(a){YontooClient.debugMsg(a)}},debugMsg:function(){},isEmpty:function(a){return typeof a==="undefined"?!0:a===null?!0:!1},loadScript:function(a,b,c){var e=document.createElement("script");if(b)e.onload=e.onreadystatechange=function(){if(e.readyState&&e.readyState!=="complete"&&e.readyState!=="loaded")return!1;e.onload=e.onreadystatechange=null;b.call(YontooClient,a,c)};e.src=a;var d=
document.head||document.getElementsByTagName("head")[0]||document.body;d.insertBefore(e,d.firstChild)},withJquery:function(a){YontooClient.$?a(YontooClient.$):YontooClient.loadScript("//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js",function(){YontooClient.$=$.noConflict(!0);a(YontooClient.$)})},checkSearchTerm:function(){try{return YontooClient.getQueryVariable("q")}catch(a){YontooClient.debugMsg("checkSearchTerm: "+a)}},changeHeight:function(a){try{YontooClient.getNodeFromPath("//Extensions/GoogleBuzzDock/Widgets/Visual/BuzzDock").setAttribute("height",
a)}catch(b){YontooClient.debugMsg("changeHeight: "+b)}try{document.getElementById("buzzdock").style.height=a+"px"}catch(c){YontooClient.debugMsg("changeHeight: "+c)}},changeHeight2:function(a,b,c){try{YontooClient.getNodeFromPath(c).setAttribute("height",a)}catch(e){YontooClient.debugMsg("changeHeight: "+e)}try{document.getElementById(b).style.height=a+"px"}catch(d){YontooClient.debugMsg("changeHeight: "+d)}},isMac:function(){try{if(navigator.appVersion.toLowerCase().indexOf("mac")>0)return!0}catch(a){YontooClient.debugMsg("isMac: "+
a)}return!1},isIE:function(){try{return window.ActiveXObject?!0:!1}catch(a){}return!1},getQueryVariable:function(a){for(var b="",b=window.location.href.indexOf("#"),b=b!==-1?window.location.href.substring(b+1):window.location.search.substring(1),b=b.split("&"),c=0;c<b.length;c++){var e=b[c].split("=");if(e[0]===a)return e[1]}return""},addQueryParameter:function(a,b,c){a+=a.indexOf("?")===-1?"?":"&";return a+b+"="+c},lastWindowSize:{width:-1,height:-1},getWindowSize:function(){if("innerWidth"in window)return{width:window.innerWidth,
height:window.innerHeight};else{var a=document.documentElement||document.body;return{width:a.offsetWidth,height:a.offsetHeight}}},isResizePending:!1,handleWindowResize:function(){try{if(!YontooClient.inResize){YontooClient.inResize=!0;YontooClient.isIE()||YontooClient.renderAll(!0,!1);if(YontooClient.isIE()&&!YontooClient.isResizePending){var a=YontooClient.lastWindowSize,b=YontooClient.getWindowSize();if(b.width!=a.width||b.height!=a.height)YontooClient.lastWindowSize=b,YontooClient.isResizePending=
!0,setTimeout("try{YontooClient.renderAll(true, false);YontooClient.isResizePending=false;}catch(ex){YontooClient.isResizePending = false;}",0)}YontooClient.inResize=!1}}catch(c){YontooClient.debugMsg("handleWindowResize: "+c)}},handleWindowLoad:function(){try{if(YontooClient.windowLoaded!=!0)YontooClient.windowLoaded=!0,YontooClient.isIE()?YontooClient.tryLoadYontoo(!0):YontooClient.tryLoadYontoo(!1)}catch(a){YontooClient.debugMsg("handleWindowLoad: "+a)}},trapEvents:function(){try{window.addEventListener?
window.addEventListener("resize",YontooClient.handleWindowResize,!1):window.attachEvent&&window.attachEvent("onresize",YontooClient.handleWindowResize),window.addEventListener?window.addEventListener("DOMContentLoaded",YontooClient.handleWindowLoad,!1):window.attachEvent&&window.attachEvent("onload",YontooClient.handleWindowLoad)}catch(a){YontooClient.debugMsg("trapEvents: "+a)}},evalDocumentJS:function(a){try{YontooClient.isIE()?eval(a,{}):YontooClient.getCurrentWindow().setTimeout(a,0)}catch(b){YontooClient.debugMsg("evalDocumentJS: "+
b)}},unencodeXml:function(a){a=a.replace("&amp;","&");a=a.replace("&gt;",">");a=a.replace("&lt;","<");return a=a.replace("&quot;",'"')},getCurrentDocument:function(){try{return window.document}catch(a){YontooClient.debugMsg("getCurrentDocument: "+a)}},getCurrentWindow:function(){return window},getCurrentLocation:function(){try{return window.location.href}catch(a){YontooClient.debugMsg("getCurrentLocation: "+a)}},tryLoadYontoo:function(a){try{if(YontooClient.locationChanged(!1)){if(!YontooClient.isEmpty(YontooClient.getCurrentDocument().body))if(YontooClient.isIE()){if(!a||
YontooClient.getCurrentDocument().body.readyState==="complete"){YontooClient.loadXMLFromXML();return}}else if(!a||YontooClient.getCurrentDocument().body.readyState==="interactive"||YontooClient.getCurrentDocument().body.readyState==="complete"){YontooClient.loadXMLFromXML();return}setTimeout("try{YontooClient.tryLoadYontoo();}catch(ex){}",100)}}catch(b){YontooClient.debugMsg("tryLoadYontoo: "+b)}},tryTrapEvents:function(){try{YontooClient.isEmpty(YontooClient.getCurrentDocument().body)?setTimeout("try{YontooClient.tryTrapEvents();}catch(ex){}",
1E3):YontooClient.trapEvents()}catch(a){YontooClient.debugMsg("tryTrapEvents: "+a)}},getElementsByName:function(a){try{return YontooClient.getCurrentDocument().getElementsByName(a)}catch(b){YontooClient.debugMsg("getElementsByName: "+b)}},getElementsByClassName:function(a,b,c){try{var e=YontooClient.classElementsCache[a];if(!YontooClient.isEmpty(e))return e;for(var b=b||"*",d=c||YontooClient.getCurrentDocument(),f=b==="*"&&d.all?d.all:d.getElementsByTagName(b),c=[],g,m=f.length,d=0;d<m;d++){g=f[d];
for(var n=g.className.split(" "),b=0;b<n.length;b++)a===n[b]&&c.push(g)}return c}catch(h){YontooClient.debugMsg("getElementsByClassName: "+h)}},getFullTopOffset:function(a){try{for(var b=0;!YontooClient.isEmpty(a.offsetParent);)b+=a.offsetTop,a=a.offsetParent;return b}catch(c){YontooClient.debugMsg("getFullTopOffset: "+c)}},getFullLeftOffset:function(a){try{for(var b=0;!YontooClient.isEmpty(a);)b+=a.offsetLeft,a=a.offsetParent;return b}catch(c){YontooClient.debugMsg("getFullLeftOffset: "+c)}},loadXML:function(a,
b,c,e){try{if(YontooClient.renderOrigin=b,YontooClient.isIE())YontooClient.xmlDoc=new ActiveXObject("Microsoft.XMLDOM"),YontooClient.xmlDoc.async=!1,YontooClient.xmlDoc.load(a+"?ro="+b+"&po="+c+"&lo="+e),YontooClient.loadXMLComplete()}catch(d){YontooClient.debugMsg("loadXML: "+d)}},getPegOriginFromLocation:function(a){try{var b=[];if(a==="about:Tabs")return b[0]="//Pegs/abouttabs.local",b;if(a==="about:blank")return b[0]="//Pegs/aboutblank.local",b;var c=a.split("/");b[0]="//Pegs/"+c[2];return b}catch(e){YontooClient.debugMsg("getPegOriginFromLocation: "+
e)}},getPegOriginFromXml:function(a){try{for(var b=a.getElementsByTagName("Pegs"),a=[],c=0;c<b.length;c++)null!=b[c].firstChild&&(a[c]="//Pegs/"+b[c].firstChild.nodeName);return a}catch(e){YontooClient.debugMsg("getPegOriginFromXml: "+e)}},loadXMLFromLocationComplete:function(a){try{YontooClient.xmlDoc.loadXML(a),YontooClient.loadXMLComplete()}catch(b){YontooClient.debugMsg("loadXMLFromLocationComplete: "+b)}},selectSingleNode:function(a,b){try{if(YontooClient.isIE())return a.selectSingleNode(b);
else{var c=new XPathEvaluator,e=c.createNSResolver(YontooClient.isEmpty(a.ownerDocument)?a.documentElement:a.ownerDocument.documentElement);return c.evaluate(b,a,e,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue}}catch(d){return null}},selectNodes:function(a,b){try{if(YontooClient.isIE())return a.selectNodes(b);else{var c=new XPathEvaluator,e=c.createNSResolver(YontooClient.isEmpty(a.ownerDocument)?a.documentElement:a.ownerDocument.documentElement),d=c.evaluate(b,a,e,XPathResult.ORDERED_NODE_ITERATOR_TYPE,
null),c=[];if(!YontooClient.isEmpty(d))for(var f=d.iterateNext();f;)c.push(f),f=d.iterateNext();return c}}catch(g){YontooClient.debugMsg("selectNodes: "+g)}},getNodeText:function(a){try{return YontooClient.isIE()?a.text:a.textContent}catch(b){YontooClient.debugMsg("getNodeText: "+b)}},loadXMLFromLocation:function(a,b){try{if(YontooClient.pegsOrigin=YontooClient.getPegOriginFromLocation(b),typeof y2LocXML!=="undefined")YontooClient.loaded===!0?this.loadXMLComplete():(YontooClient.isIE()?(YontooClient.xmlDoc=
new ActiveXObject("Microsoft.XMLDOM"),YontooClient.xmlDoc.async=!1,YontooClient.xmlDoc.loadXML(y2LocXML),YontooClient.loadXMLComplete()):(this.xmlDoc=(new DOMParser).parseFromString(y2LocXML,"text/xml"),this.loadXMLComplete()),YontooClient.loaded=!0)}catch(c){YontooClient.debugMsg("loadXMLFromLocation: "+c)}},loadXMLFromXML:function(){try{if(typeof y2LocXML!=="undefined")YontooClient.loaded===!0?this.loadXMLComplete():(YontooClient.isIE()?(YontooClient.xmlDoc=new ActiveXObject("Microsoft.XMLDOM"),
YontooClient.xmlDoc.async=!1,YontooClient.xmlDoc.loadXML(y2LocXML),YontooClient.pegsOrigin=YontooClient.getPegOriginFromXml(YontooClient.xmlDoc),YontooClient.loadXMLComplete()):(this.xmlDoc=(new DOMParser).parseFromString(y2LocXML,"text/xml"),YontooClient.pegsOrigin=YontooClient.getPegOriginFromXml(this.xmlDoc),this.loadXMLComplete()),YontooClient.loaded=!0)}catch(a){YontooClient.debugMsg("loadXMLFromXML: "+a)}},getInstallId:function(){try{return typeof yontooAPI!=="undefined"?yontooAPI.getInstallId():
typeof getInstalledClientId!=="undefined"?getInstalledClientId():document.getElementById("YontooInstallID").textContent}catch(a){YontooClient.debugMsg("getInstallId: "+a)}},getPluginIds:function(){try{var a=document.getElementById("Y2PluginIds"),b={};if(a)for(var c=a.textContent.split(","),a=0;a<c.length;a++){var e=c[a].split(":");b[e[0]]=e[1]}return b}catch(d){YontooClient.debugMsg("getPluginIds: "+d)}},setInstallId:function(a){try{var b=document.getElementById("YontooInstallID");if(YontooClient.isEmpty(b))b=
document.createElement("div"),b.id="YontooInstallID",b.style.display="none",document.body.appendChild(b);b.textContent=a}catch(c){YontooClient.debugMsg("setInstallId: "+c)}},enableDisableApp:function(a,b,c,e){try{var d="http://www.yontoo.com/EnableApps.aspx?appId="+b+"&clientId="+YontooClient.getInstallId()+"&enable="+c;e&&(d=d+"&redirUrl="+escape(top.location.href));var f=YontooClient.getCurrentDocument().getElementById(a+"_iframe");YontooClient.isEmpty(f)&&(f=YontooClient.getCurrentDocument().getElementById(a));
if(f.src===d)f.src="";f.src=d}catch(g){YontooClient.debugMsg("exception: "+g)}},loadAndEvalJsInclude:function(a){try{if(YontooClient.isIE()){var b=yontooAPI.httpGet(a);eval(b)}}catch(c){YontooClient.debugMsg("Exception in loadAndEvalJsInclude: "+c)}},clearNodeMap:function(){try{YontooClient.nodeMap={};var a=YontooClient.getElementsByClassName("yontoolayerwidget"),b=null;if(!YontooClient.isEmpty(a))for(b=a.pop();b;)typeof b.y2noclear!=="undefined"&&b.y2noclear===!0?typeof b.y2clearonlocchange!=="undefined"&&
b.y2clearonlocchange===!0&&YontooClient.locationChanged2(!1)==!0?b.parentNode.removeChild(b):YontooClient.nodeMap[b.id]=b:b.parentNode.removeChild(b),b=a.pop();for(b=YontooClient.nakedNodeMap.pop();b;)b.style.backgroundImage="",b.style.backgroundColor="",b.style.opacity=1,b=YontooClient.nakedNodeMap.pop();YontooClient.classElementsCache={};YontooClient.nakedNodeMap=[]}catch(c){YontooClient.debugMsg("clearNodeMap: "+c)}},createDivForRender:function(a,b,c,e){try{var d=YontooClient.getCurrentDocument().createElement("div");
d.id=YontooClient.isEmpty(b)?YontooClient.getNodeXPath(a):b;d.className="yontoolayerwidget";d.style.left=0;d.style.top=0;d.style.textAlign="left";d.style.verticalAlign="top";if(!YontooClient.isEmpty(c)&&!YontooClient.isEmpty(e))d.style.border=c+"px solid "+e;return YontooClient.nodeMap[d.id]=d}catch(f){YontooClient.debugMsg("createDivForRender: "+f)}},renderNode_native_button_onclick:function(){try{YontooClient.executeSection(this.parentNode.id+"/Events/Click"),setTimeout("try{YontooClient.renderAll(false, true);}catch(ex){}",
0)}catch(a){YontooClient.debugMsg("renderNode_native_button_onclick: "+a)}},renderNode_native_button:function(a,b){try{var c=b.firstChild;if(YontooClient.isEmpty(c)){c=YontooClient.getCurrentDocument().createElement("input");c.setAttribute("type","button");var e=a.attributes.getNamedItem("text");YontooClient.isEmpty(e)||c.setAttribute("value",e.value);c.style.width=b.clientWidth;c.style.height=b.clientHeight;b.appendChild(c);YontooClient.getCurrentDocument().body.appendChild(b)}c.YontooCtrl=a;var d=
a.attributes.getNamedItem("text");YontooClient.isEmpty(d)||c.setAttribute("value",d.value);var f=YontooClient.selectSingleNode(a,"Events/Click");if(!YontooClient.isEmpty(f))c.onclick=YontooClient.renderNode_native_button_onclick}catch(g){YontooClient.debugMsg("renderNode_native_button: "+g)}},renderNode_native_swf:function(a,b){try{var c;c=a.attributes.getNamedItem("id")?a.attributes.getNamedItem("id").value+"_y2swfdiv":"y2swfdiv";if(!YontooClient.getCurrentDocument().getElementById(c)){var e=YontooClient.getCurrentDocument().createElement("div");
e.id=c;b.appendChild(e);YontooClient.swfobject.embedSWF(a.attributes.getNamedItem("src").value,c,"100%","100%","10.0.0","expressInstall.swf",{},{menu:"false",allowScriptAccess:"always",wmode:"transparent"},{style:"outline:none;"})}}catch(d){YontooClient.debugMsg("renderNode_native_swf: "+d)}},renderNode_native_weblink:function(a,b,c,e,d){try{if(!d)b.style.display="none";c="";try{c=a.attributes.getNamedItem("text").value}catch(f){}e="";try{e=a.attributes.getNamedItem("destination").value}catch(g){}d=
"_top";try{d=a.attributes.getNamedItem("target").value}catch(m){}var n=a.attributes.getNamedItem("id"),h=null;YontooClient.isEmpty(n)||(h=YontooClient.getCurrentDocument().getElementById(n.value));if(YontooClient.isEmpty(h)){h=YontooClient.getCurrentDocument().createElement("a");if(!YontooClient.isEmpty(n))h.id=n.value;h.innerHTML=c;h.setAttribute("href",e);h.setAttribute("target",d);var o=a.attributes.getNamedItem("fontcolor");if(!YontooClient.isEmpty(o))h.style.color=o.value;var w=a.attributes.getNamedItem("fontsize");
if(!YontooClient.isEmpty(w))h.style.fontSize=w.value;var s=a.attributes.getNamedItem("fontfamily");if(!YontooClient.isEmpty(s))h.style.fontFamily=s.value;var j=a.attributes.getNamedItem("fontbold");if(!YontooClient.isEmpty(j))h.style.fontWeight="bold";var i=a.attributes.getNamedItem("cssclass");if(!YontooClient.isEmpty(i))h.className=i.value;b.appendChild(h)}}catch(l){YontooClient.debugMsg("renderNode_native_weblink: "+l)}},renderNode_native_imagestatebutton_onclick:function(){try{YontooClient.executeSection(this.parentNode.id+
"/Events/Click"),YontooClient.renderAll(!0,!1),this.src=YontooClient.getNodeFromPath(this.parentNode.id).attributes.getNamedItem("on").nodeValue==="true"?this.getAttribute("srcupon"):this.getAttribute("srcupoff")}catch(a){YontooClient.debugMsg("renderNode_native_imagestatebutton_onclick: "+a)}},renderNode_native_imagestatebutton_onmouseover:function(){try{this.src=YontooClient.getNodeFromPath(this.parentNode.id).attributes.getNamedItem("on").nodeValue==="true"?this.getAttribute("srchoveron"):this.getAttribute("srchoveroff")}catch(a){YontooClient.debugMsg("renderNode_native_imagestatebutton_onmouseover: "+
a)}},renderNode_native_imagestatebutton_onmouseout:function(){try{this.src=YontooClient.getNodeFromPath(this.parentNode.id).attributes.getNamedItem("on").nodeValue==="true"?this.getAttribute("srcupon"):this.getAttribute("srcupoff")}catch(a){YontooClient.debugMsg("renderNode_native_imagestatebutton_onmouseout: "+a)}},renderNode_native_imagestatebutton_onmousedown:function(){try{this.src=YontooClient.getNodeFromPath(this.parentNode.id).attributes.getNamedItem("on").nodeValue==="true"?this.getAttribute("srcdownon"):
this.getAttribute("srcdownoff")}catch(a){YontooClient.debugMsg("renderNode_native_imagestatebutton_onmousedown: "+a)}},renderNode_native_imagestatebutton_onmouseup:function(){try{this.src=YontooClient.getNodeFromPath(this.parentNode.id).attributes.getNamedItem("on").nodeValue==="true"?this.getAttribute("srcupon"):this.getAttribute("srcupoff")}catch(a){YontooClient.debugMsg("renderNode_native_imagestatebutton_onmouseup: "+a)}},renderNode_native_imagestatebutton:function(a,b){try{var c=b.firstChild;
if(YontooClient.isEmpty(c))c=YontooClient.getCurrentDocument().createElement("img"),c.src=YontooClient.checkProtocol(a.attributes.getNamedItem("upoff").value),c.setAttribute("srcupon",YontooClient.checkProtocol(a.attributes.getNamedItem("upon").value)),c.setAttribute("srcupoff",YontooClient.checkProtocol(a.attributes.getNamedItem("upoff").value)),c.setAttribute("srcdownon",YontooClient.checkProtocol(a.attributes.getNamedItem("downon").value)),c.setAttribute("srcdownoff",YontooClient.checkProtocol(a.attributes.getNamedItem("downoff").value)),
c.setAttribute("srchoveron",YontooClient.checkProtocol(a.attributes.getNamedItem("hoveron").value)),c.setAttribute("srchoveroff",YontooClient.checkProtocol(a.attributes.getNamedItem("hoveroff").value)),c.style.width=b.clientWidth,c.style.height=b.clientHeight,c.style.cursor="pointer",b.appendChild(c);c.YontooCtrl=a;var e=YontooClient.selectSingleNode(a,"Events/Click");if(!YontooClient.isEmpty(e))c.addEventListener?(c.addEventListener("click",YontooClient.renderNode_native_imagestatebutton_onclick,
!0),c.addEventListener("mouseover",YontooClient.renderNode_native_imagestatebutton_onmouseover,!0),c.addEventListener("mouseout",YontooClient.renderNode_native_imagestatebutton_onmouseout,!0),c.addEventListener("mouseup",YontooClient.renderNode_native_imagestatebutton_onmouseup,!0),c.addEventListener("mousedown",YontooClient.renderNode_native_imagestatebutton_onmousedown,!0)):(c.onclick=YontooClient.renderNode_native_imagestatebutton_onclick,c.onmouseover=YontooClient.renderNode_native_imagestatebutton_onmouseover,
c.onmouseout=YontooClient.renderNode_native_imagestatebutton_onmouseout,c.onmouseup=YontooClient.renderNode_native_imagestatebutton_onmouseup,c.onmousedown=YontooClient.renderNode_native_imagestatebutton_onmousedown)}catch(d){YontooClient.debugMsg("renderNode_native_imagestatebutton:"+d)}},renderNode_native_imagebutton_onclick:function(){try{YontooClient.executeSection(this.parentNode.id+"/Events/Click"),setTimeout("try{YontooClient.renderAll(false, true);}catch(ex){}",0)}catch(a){YontooClient.debugMsg("renderNode_native_imagebutton_onclick: "+
a)}},renderNode_native_imagebutton_onmousemove:function(){try{this.src=this.srchover}catch(a){YontooClient.debugMsg("renderNode_native_imagebutton_onmousemove: "+a)}},renderNode_native_imagebutton_onmouseout:function(){try{this.src=this.srcup}catch(a){YontooClient.debugMsg("renderNode_native_imagebutton_onmouseout: "+a)}},renderNode_native_imagebutton_onmousedown:function(){try{this.src=this.srcdown}catch(a){YontooClient.debugMsg("renderNode_native_imagebutton_onmousedown: "+a)}},renderNode_native_imagebutton_onmouseup:function(){try{this.src=
this.srcup}catch(a){YontooClient.debugMsg("renderNode_native_imagebutton_onmouseup: "+a)}},renderNode_native_imagebutton:function(a,b){try{var c=b.firstChild;if(YontooClient.isEmpty(c))c=YontooClient.getCurrentDocument().createElement("img"),c.src=YontooClient.checkProtocol(a.attributes.getNamedItem("up").value),c.srcup=YontooClient.checkProtocol(a.attributes.getNamedItem("up").value),c.srcdown=YontooClient.checkProtocol(a.attributes.getNamedItem("down").value),c.srchover=YontooClient.checkProtocol(a.attributes.getNamedItem("hover").value),
c.style.cursor="pointer",c.style.width=b.clientWidth,c.style.height=b.clientHeight,b.appendChild(c);c.YontooCtrl=a;var e=a.attributes.getNamedItem("targeturl").value;if(!YontooClient.isEmpty(e))c.targeturl=e,c.onclick=function(){window.location=this.targeturl};var d=a.attributes.getNamedItem("tooltip").value;if(!YontooClient.isEmpty(d))c.alt=d;var f=YontooClient.selectSingleNode(a,"Events/Click");if(!YontooClient.isEmpty(f))c.addEventListener?(c.addEventListener("click",YontooClient.renderNode_native_imagestatebutton_onclick,
!0),c.addEventListener("mouseover",YontooClient.renderNode_native_imagestatebutton_onmouseover,!0),c.addEventListener("mouseout",YontooClient.renderNode_native_imagestatebutton_onmouseout,!0),c.addEventListener("mouseup",YontooClient.renderNode_native_imagestatebutton_onmouseup,!0),c.addEventListener("mousedown",YontooClient.renderNode_native_imagestatebutton_onmousedown,!0)):(c.onclick=YontooClient.renderNode_native_imagebutton_onclick,c.onmousemove=YontooClient.renderNode_native_imagebutton_onmousemove,
c.onmouseout=YontooClient.renderNode_native_imagebutton_onmouseout,c.onmouseup=YontooClient.renderNode_native_imagebutton_onmouseup,c.onmousedown=YontooClient.renderNode_native_imagebutton_onmousedown)}catch(g){YontooClient.debugMsg("renderNode_native_imagebutton: "+g)}},getNodeXPath:function(a){try{return a.parentNode.nodeName==="YLML"?"//"+a.nodeName:YontooClient.getNodeXPath(a.parentNode)+"/"+a.nodeName}catch(b){YontooClient.debugMsg("getNodeXPath: "+b)}},getPegElementsByName:function(a){try{var b=
YontooClient.pegOrigin+a;if(YontooClient.isEmpty(b))return null;var c=a=null,e=null,d=null,f=YontooClient.getNodeFromPath(b);if(YontooClient.isEmpty(f))return null;else YontooClient.getSafeAttributeIntValue(f,"left"),YontooClient.getSafeAttributeIntValue(f,"top"),a=YontooClient.getSafeAttributeStringValue(f,"class"),c=YontooClient.getSafeAttributeStringValue(f,"id"),e=YontooClient.getSafeAttributeStringValue(f,"tagname"),YontooClient.getSafeAttributeStringValue(f,"child"),YontooClient.getSafeAttributeStringValue(f,
"naked"),d=YontooClient.getSafeAttributeStringValue(f,"match"),YontooClient.getSafeAttributeStringValue(f,"repeat");return YontooClient.getPegElements(c,a,e,d)}catch(g){YontooClient.debugMsg("getPegElementsByName: "+g)}},getPegElements:function(a,b,c,e,d){try{if(YontooClient.isEmpty(a)||a.length===0)if(YontooClient.isEmpty(b)||b.length===0)if(YontooClient.isEmpty(d)||d.length===0)if(YontooClient.isEmpty(c)||c.length===0){var f=[];f.push(YontooClient.getCurrentDocument().body);return f}f=null;if(YontooClient.isEmpty(a))YontooClient.isEmpty(b)?
YontooClient.isEmpty(d)?YontooClient.isEmpty(c)||(f=YontooClient.getCurrentDocument().getElementsByTagName(c)):f=YontooClient.getElementsByName(d):f=YontooClient.getElementsByClassName(b);else if(f=[],e==="startswith"){var g;g=YontooClient.isEmpty(c)?YontooClient.getCurrentDocument().elements:YontooClient.getCurrentDocument().getElementsByTagName(c);for(b=0;b<g.length;b++)g[b].id.indexOf(a)===0&&f.push(g[b])}else f.push(YontooClient.getCurrentDocument().getElementById(a));if(!YontooClient.isEmpty(f)&&
!YontooClient.isEmpty(c)&&c.length>0)for(var m=c.split("/"),a=0;a<f.length;a++){c=!1;for(g=0;g<m.length;g++)if(!YontooClient.isEmpty(f[a]))if(f[a].tagName!==m[g])for(b=0;b<f[a].childNodes.length;b++){if(f[a].childNodes[b].tagName===m[g]){f[a]=f[a].childNodes[b];c=!0;break}}else c=!0;c||(f[a]=null)}if(YontooClient.isEmpty(f))return null;else if(f.length===0)return null;else{for(var m=[],n=f.length-1;n>=0;n--){var h=f[n];YontooClient.isEmpty(h)||m.push(h)}return m.length===0?null:m}}catch(o){YontooClient.debugMsg("getPegElements: "+
o)}},getSafeAttributeStringValue:function(a,b){try{var c=a.attributes.getNamedItem(b);return YontooClient.isEmpty(c)?null:c.value}catch(e){YontooClient.debugMsg("getSafeAttributeStringValue: "+e)}},getSafeAttributeIntValue:function(a,b){try{var c=a.attributes.getNamedItem(b);return YontooClient.isEmpty(c)?null:parseInt(c.value,10)}catch(e){YontooClient.debugMsg("getSafeAttributeIntValue: "+e)}},getFixedTop:function(){try{return YontooClient.getCurrentDocument().compatMode=="BackCompat"?YontooClient.getCurrentDocument().body.scrollTop:
YontooClient.getCurrentDocument().documentElement.scrollTop}catch(a){YontooClient.debugMsg("getFixedTop: "+a)}},getFixedLeft:function(a,b){b=parseInt(b);try{return YontooClient.getCurrentDocument().compatMode=="BackCompat"?YontooClient.getCurrentDocument().body.clientWidth+b:YontooClient.getCurrentDocument().documentElement.clientWidth+b}catch(c){YontooClient.debugMsg("getFixedLeft: "+c)}},renderNode_native_base:function(a,b,c){try{var e=!1,d=null,f=0,g=0,m=0,n=0;YontooClient.isIE()?YontooClient.getCurrentDocument():
(YontooClient.getCurrentWindow(),YontooClient.getCurrentWindow());var h=a.attributes.getNamedItem("peg");if(!YontooClient.isEmpty(h)){var o=YontooClient.pegOrigin+h.value;if(!YontooClient.isEmpty(YontooClient.isEmpty(o))){var w=a.attributes.getNamedItem("visible");YontooClient.isEmpty(w)||(w=w.value==="true");var h=0,s=a.attributes.getNamedItem("retryCount");s!==null&&(h=parseInt(s.nodeValue,10));var s=500,j=a.attributes.getNamedItem("retryPeriod");j!==null&&(s=parseInt(j.nodeValue,10));var i=YontooClient.getComplexNodeAttribute(a,
"id");typeof YontooClient.pendingWidgetLoadsRetries[i]=="undefined"&&(YontooClient.pendingWidgetLoadsRetries[i]=h,YontooClient.pendingWidgetLoadsRetryPeriods[i]=s);var l;try{l=a.attributes.getNamedItem("id").value}catch(x){}YontooClient.isEmpty(l)&&(l=typeof b==="undefined"?YontooClient.getNodeXPath(a):b);for(var i=j=0,F=s=h=null,D=null,G=null,P=null,r=null,H=null,K=null,S=null,E=null,y=null,I=null,J=null,T=null,Q=null,L=null,U=null,V=null,W=YontooClient.getNodesFromPath(o),o=0;o<W.length;o++){var t=
W[o];if(YontooClient.isEmpty(t))YontooClient.debugMsg("null peg in renderNode_native_base");else{var U=YontooClient.getSafeAttributeStringValue(a,"border"),V=YontooClient.getSafeAttributeStringValue(a,"bordercolor"),s=YontooClient.getSafeAttributeStringValue(t,"class"),F=YontooClient.getSafeAttributeStringValue(t,"id"),D=YontooClient.getSafeAttributeStringValue(t,"name"),T=YontooClient.getSafeAttributeStringValue(t,"tagname"),K=YontooClient.getSafeAttributeStringValue(t,"match"),M=YontooClient.getPegElements(F,
s,T,K,D);if(!(YontooClient.isEmpty(M)||M.length===0)){j=YontooClient.getSafeAttributeIntValue(t,"left");i=YontooClient.getSafeAttributeIntValue(t,"top");G=YontooClient.getSafeAttributeStringValue(t,"child");r=YontooClient.getSafeAttributeStringValue(t,"naked");S=YontooClient.getSafeAttributeStringValue(t,"repeat");E=YontooClient.getSafeAttributeStringValue(t,"scrollhostid");y=YontooClient.getSafeAttributeStringValue(t,"minscrollwidth");I=YontooClient.getSafeAttributeStringValue(t,"nudgex");J=YontooClient.getSafeAttributeStringValue(t,
"nudgey");YontooClient.getSafeAttributeStringValue(t,"height");YontooClient.getSafeAttributeStringValue(t,"width");for(var v=null,I=YontooClient.isEmpty(I)?0:+I,J=YontooClient.isEmpty(J)?0:+J;M.length>0;){var k=M.pop();YontooClient.isEmpty(r)?d=typeof b==="undefined"?YontooClient.nodeMap[l]:YontooClient.getCurrentDocument().getElementById(l):(d=k,YontooClient.nakedNodeMap.push(d));var A=!1;YontooClient.isEmpty(d)&&(d=YontooClient.createDivForRender(a,l,U,V),A=!0);for(var X=!1,v=null,p,z,C,Y,N,u=0;u<
a.attributes.length;u++)switch(a.attributes[u].nodeName){case "nakedwidth":p=a.attributes[u].value;p.substring(p.length-1,p.length)==="%"?(p=p.substring(0,p.length-1),YontooClient.isEmpty(E)?d.style.width=p+"%":(C=YontooClient.getCurrentDocument().getElementById(E).scrollWidth,+y>C&&(C=+y),N=C*+p/100,d.style.width=N+"px")):d.style.width=p+"px";break;case "width":if(YontooClient.isEmpty(r))p=a.attributes[u].value,p.substring(p.length-1,p.length)==="%"?(p=p.substring(0,p.length-1),YontooClient.isEmpty(E)?
d.style.width=p+"%":(C=YontooClient.getCurrentDocument().getElementById(E).scrollWidth,+y>C&&(C=+y),N=C*+p/100,d.style.width=N+"px")):d.style.width=p+"px";break;case "height":if(YontooClient.isEmpty(r))z=a.attributes[u].value,z.substring(z.length-1,z.length)==="%"?(z=z.substring(0,z.length-1),YontooClient.isEmpty(E)?m=+z:(Y=YontooClient.getCurrentDocument().getElementById(E).scrollHeight,m=Y*+z/100)):m=+z,d.style.height=m+"px";break;case "top":g=g+parseInt(a.attributes[u].value,10)+J;break;case "textIndent":Q=
a.attributes[u].value+"px";break;case "textAlign":L=a.attributes[u].value;break;case "left":f=f+parseInt(a.attributes[u].value,10)+I;break;case "vPos":h=a.attributes[u].value;break;case "zorder":H=a.attributes[u].value;break;case "pegcorner":P=a.attributes[u].value;break;case "checkheight":var aa=a.attributes[u].value,Z=YontooClient.getCurrentDocument().getElementById(aa);if(YontooClient.isEmpty(Z))return;else n=Z.scrollHeight*1.6,X=!0;break;case "noclear":if(a.attributes[u].value==="true")d.y2noclear=
!0;break;case "clearonlocchange":if(a.attributes[u].value==="true")d.y2clearonlocchange=!0;break;case "peerskip":v=+a.attributes[u].value}if(!YontooClient.isEmpty(Q))d.style.textIndent=Q;if(!YontooClient.isEmpty(h)){if(YontooClient.isIE())d.style.verticalAlign=h;d.style.lineHeight="0px"}if(!YontooClient.isEmpty(L)&&(d.style.textAlign=L,L==="center"))d.style.margin="0 auto";if(!YontooClient.isEmpty(H))d.style.zIndex=H;if(!YontooClient.isEmpty(k)){var q;switch(G){case "parent":YontooClient.isEmpty(r)&&
k.parentNode.appendChild(d);d.style.position="absolute";g=g+YontooClient.getFullTopOffset(k)+i;f=f+YontooClient.getFullLeftOffset(k)+j;break;case "parentbefore":YontooClient.isEmpty(d.parentNode)&&k.parentNode.insertBefore(d,k);break;case "parentafter":YontooClient.isEmpty(d.parentNode)&&k.parentNode.insertBefore(d,k.nextSibling);break;case "parentinline":try{if(A&&YontooClient.isEmpty(r))if(YontooClient.isEmpty(v)||v>=k.childNodes.length)k.parentNode.appendChild(d);else{k=k.parentNode;for(q=k.firstChild;v>
0;)if(YontooClient.isEmpty(q.nextSibling))v=0;else{for(q=q.nextSibling;typeof q.style==="undefined"||q.style.display==="none";)if(q=q.nextSibling,YontooClient.isEmpty(q))break;v--}k.insertBefore(d,q)}}catch(da){}g+=i;f+=j;break;case "self":A&&YontooClient.isEmpty(r)&&k.appendChild(d);d.style.position="absolute";g+=i;f+=j;break;case "selfinline":try{if(A&&YontooClient.isEmpty(r))if(YontooClient.isEmpty(v)||v>=k.childNodes.length)k.appendChild(d);else{for(q=k.firstChild;v>0;)if(YontooClient.isEmpty(q.nextSibling))v=
0;else{for(q=q.nextSibling;typeof q.style==="undefined"||q.style.display==="none";)if(q=q.nextSibling,YontooClient.isEmpty(q))break;v--}k.insertBefore(d,q)}}catch(ea){}g+=i;f+=j;break;case "selfcontain":A&&YontooClient.isEmpty(r)&&k.appendChild(d);if(YontooClient.isEmpty(r))d.style.position="absolute";g=i;f=j;break;case "fixed":g+=i;if(A)if(YontooClient.isIE()){if(YontooClient.getCurrentDocument().compatMode==="BackCompat")d.style.position="absolute",d.style.top=0,d.style.left=0,d.style.setExpression("left",
"YontooClient.getFixedLeft('"+d.id+"','"+f+"') + 'px'"),d.style.setExpression("top","YontooClient.getFixedTop('"+d.id+"') + 'px'"),e=!0,k.appendChild(d)}else d.style.position="fixed",k.appendChild(d);else YontooClient.isIE()&&(e=!0);break;case "body":A&&YontooClient.isEmpty(r)&&YontooClient.getCurrentDocument().body.appendChild(d);d.style.position="absolute";g=g+YontooClient.getFullTopOffset(k)+i;f=f+YontooClient.getFullLeftOffset(k)+j;break;case "body-fixed":g+=i;if(A){if(YontooClient.isEmpty(r))YontooClient.getCurrentDocument().body.appendChild(d),
d.style.position="absolute",g=g+YontooClient.getFullTopOffset(k)+i,f=f+YontooClient.getFullLeftOffset(k)+j;if(YontooClient.isIE()){d.style.position="absolute";d.style.top=0;d.style.left=YontooClient.getFixedLeft(d.id,f);try{d.style.setExpression("left","YontooClient.getFixedLeft('"+d.id+"','"+f+"') + 'px'"),d.style.setExpression("top","YontooClient.getFixedTop('"+d.id+"') + 'px'"),e=!0}catch(ba){YontooClient.debugMsg("setExpression failed: "+ba)}}else d.style.position="fixed"}else YontooClient.isIE()&&
(e=!0);break;default:if(A&&YontooClient.isEmpty(r)){if(YontooClient.isEmpty(G))continue;YontooClient.getCurrentDocument().getElementById(G).appendChild(d)}d.style.position="absolute";g+=i;f+=j}var B=YontooClient.getCurrentDocument().body.clientWidth,O=YontooClient.getCurrentDocument().body.clientHeight;if(!YontooClient.isEmpty(k))B=k.offsetWidth,O=k.offsetHeight;if(d.style.position==="absolute"||d.style.position==="fixed")switch(P){case "tr":f+=B;break;case "br":g+=O;f+=B;break;case "bl":g+=O;break;
case "tc":YontooClient.isEmpty(y)||B<+y&&(B=y);f+=B/2;break;case "bc":YontooClient.isEmpty(y)||B<+y&&(B=y),f+=B/2,g+=O}YontooClient.isIE()&&(f+=1,g+=1);if(YontooClient.isEmpty(r)&&!e)d.style.left=f+"px",d.style.top=g+"px";if(X&&YontooClient.getFullTopOffset(d)+m>n){d.style.height="0px";for(var R=d.childNodes.length-1;R>=0;R--)d.removeChild(d.childNodes[R])}else if(c(a,d,k,!YontooClient.isEmpty(r),w),S!=="all")break}}}}}}}}catch(ca){YontooClient.debugMsg("renderNode_native_base: "+ca)}},renderNode_native_label:function(a,
b,c){try{var e=null,d=null,f=null;try{d=a.attributes.getNamedItem("text").value}catch(g){}try{e=a.attributes.getNamedItem("textsource").value}catch(m){}if(e&&e==="peg"&&d&&d!=="")var n=YontooClient.getPegElementsByName(d),d=YontooClient.isIE()?n[0].innerText:n[0].textContent;if(d&&d!=="")YontooClient.isIE()?b.innerText=d:b.textContent=d;var h=a.attributes.getNamedItem("fontsize");if(!YontooClient.isEmpty(h))b.style.fontSize=h.value;var o=a.attributes.getNamedItem("fontfamily");if(!YontooClient.isEmpty(o))b.style.fontFamily=
o.value;var w=a.attributes.getNamedItem("fontbold");if(!YontooClient.isEmpty(w))b.style.fontWeight="bold";var s=a.attributes.getNamedItem("fontcolor");if(!YontooClient.isEmpty(s))b.style.color=s.value;f=a.attributes.getNamedItem("stylewidth");if(!YontooClient.isEmpty(f))b.style.width=f.value+"px";var j=a.attributes.getNamedItem("passclick");if(!YontooClient.isEmpty(j))b.onclick=function(){YontooClient.getCurrentDocument().getElementById(c.id).onclick()}}catch(i){YontooClient.debugMsg("renderNode_native_label: "+
i)}},renderNode_native_image:function(a,b,c,e){try{var d="";try{d=a.attributes.getNamedItem("tile").value}catch(f){}var g="";try{g=a.attributes.getNamedItem("attach").value}catch(m){}var n="";try{n=a.attributes.getNamedItem("position").value}catch(h){}var o="";try{o=YontooClient.checkProtocol(a.attributes.getNamedItem("location").value)}catch(w){}if(e){b.style.backgroundImage="url("+o+")";b.style.backgroundPosition=n;switch(g){case "fixed":b.style.backgroundAttachment="fixed";break;case "scroll":b.style.backgroundAttachment=
"scroll";break;default:b.style.backgroundAttachment="scroll"}switch(d){case "y":b.style.backgroundRepeat="repeat-y";break;case "x":b.style.backgroundRepeat="repeat-x";break;case "xy":b.style.backgroundRepeat="repeat";break;default:b.style.backgroundRepeat="no-repeat"}}else{if(!YontooClient.isEmpty(a.attributes.getNamedItem("alpha"))){var s=a.attributes.getNamedItem("alpha").nodeValue;b.style.opacity=s/100}var j=a.attributes.getNamedItem("height").value,i=a.attributes.getNamedItem("width").value,l;
if(YontooClient.isEmpty(b.firstChild))if(d!==""){g=e=j;if(d==="y"||d==="xy")e=a.attributes.getNamedItem("tileheight").value;if(d==="x"||d==="xy")i=a.attributes.getNamedItem("tilewidth").value;a=0;g.charAt(g.length-1)==="%"&&(g=g.substring(0,g.length-1),g=+g*+b.clientHeight/100);j.charAt(j.length-1)==="%"&&(j=j.substring(0,j.length-1),j=+j*+b.clientWidth/100);if(i>16&&e>16)for(;a<j-i+1;){for(d=0;d<g-e+1;)l=YontooClient.getCurrentDocument().createElement("img"),b.appendChild(l),l.src=o,l.style.top=
d+"px",l.style.left=a+"px",l.style.height=e+"px",l.style.width=i+"px",l.style.position="absolute",d+=+e;if(d<g){var x=YontooClient.getCurrentDocument().createElement("div");b.appendChild(x);x.style.backgroundImage="url("+o+")";x.style.top=d+"px";x.style.left=a+"px";x.style.height=g-d+"px";x.style.width=i+"px";x.style.position="absolute";d+=+e}a+=+i}}else{l=b.firstChild;if(YontooClient.isEmpty(l))l=YontooClient.getCurrentDocument().createElement("img"),b.appendChild(l),l.src=o;l.style.height=j.charAt(j.length-
1)==="%"?j:j+"px";l.style.width=i.charAt(i.length-1)==="%"?i:i+"px";var F=a.attributes.getNamedItem("passclick");if(!YontooClient.isEmpty(F))l.onclick=function(){YontooClient.getCurrentDocument().getElementById(c.id).onclick()}}}}catch(D){YontooClient.debugMsg("renderNode_native_image: "+D)}},checkProtocol:function(a){try{document.location.protocol=="https:"&&a.indexOf("https:")==-1&&(a=a.replace("http:","https:"))}catch(b){}finally{return a}},writeWebHole:function(a,b){try{if(a=a.replace(/^\s+|\s+$/g,
""),a.indexOf("<",0)===0)b.innerHTML=a;else{var c=[];c.push("try{var div=document.getElementById('"+b.id+"');");c.push("var outGoing = new Array();");c.push("var oldDocumentWrite = document.write;");c.push("document.write = function(txt){outGoing.push(txt);};");c.push(a);c.push("document.write = oldDocumentWrite;");c.push("div.innerHTML = outGoing.join('');}catch(ex){}");YontooClient.evalDocumentJS(c.join(""))}}catch(e){YontooClient.debugMsg("writeWebHole:"+e)}},renderNode_native_webhole:function(a,
b,c,e){try{if(!(b.innerHTML.length>0)||e){var d=c="",f="",g="",m="",n="",h;try{a.attributes.getNamedItem("site")}catch(o){}try{c=YontooClient.checkProtocol(a.attributes.getNamedItem("url").nodeValue)}catch(w){}try{d=a.attributes.getNamedItem("refmin").nodeValue}catch(s){}try{f=a.attributes.getNamedItem("refrange").nodeValue}catch(j){}try{a.attributes.getNamedItem("refrepeat")}catch(i){}try{n=a.attributes.getNamedItem("empty").nodeValue}catch(l){}try{var x=YontooClient.selectSingleNode(a,"LiteralHtml");
YontooClient.isEmpty(x)||(g=YontooClient.unencodeXml(x.childNodes[0].nodeValue))}catch(F){}try{var D=YontooClient.selectSingleNode(a,"OnStartJs");YontooClient.isEmpty(D)||(m=YontooClient.unencodeXml(D.childNodes[0].nodeValue))}catch(G){}h=!0;try{a.attributes.getNamedItem("addClientId").nodeValue=="false"&&(h=!1)}catch(P){}a="";if(c.length>0){c=c.replace("+","&");h&&(c=YontooClient.addQueryParameter(c,"clientId",YontooClient.getInstallId()));if(e){if(b.src.length!==c.length)b.src=c}else var r=b.id+
"_iframe",a="<iframe src='"+c+"' width='"+b.clientWidth+"' height='"+b.clientHeight+"' marginwidth='0' marginheight='0' frameborder='0' scrolling='no' hspace='0' vspace='0' allowtransparency='true' id='"+r+"'/>";if(d.length>0&&f.length>0){var d=+d,f=+f,H=Math.round(Math.random()*+f)+d;setInterval("try{document.getElementById('"+r+"').src='"+c+"';}catch(ex){}",H)}}else if(g.length>0)a=g;else if(n.length>0)e?b.src="":a="<iframe src='"+c+"' width='"+b.clientWidth+"' height='"+b.clientHeight+"' marginwidth='0' marginheight='0' frameborder='0' scrolling='no' hspace='0' vspace='0' allowtransparency='true' id='"+
(b.id+"_iframe")+"'/>";YontooClient.writeWebHole(a,b);eval(m)}}catch(K){YontooClient.debugMsg("renderNode_native_webhole: "+K)}},renderNode_native_style:function(a,b){try{if(!YontooClient.isEmpty(a.attributes.getNamedItem("alpha"))){var c=a.attributes.getNamedItem("alpha").nodeValue;b.style.opacity=c/100}if(!YontooClient.isEmpty(a.attributes.getNamedItem("bkgdColor"))){var e=a.attributes.getNamedItem("bkgdColor").nodeValue;e==="none"?(b.style.backgroundImage="url()",b.style.backgroundColor="transparent"):
b.style.backgroundColor=e}}catch(d){YontooClient.debugMsg("renderNode_native_style: "+d)}},renderWidgets:function(a,b){try{if(YontooClient.renderSingleWidget(a,b),!YontooClient.isEmpty(a.childNodes))for(var c=0;c<a.childNodes.length;c++)YontooClient.renderWidgets(a.childNodes[c])}catch(e){YontooClient.debugMsg("renderWidgets: "+e)}},renderSingleWidget:function(a,b){try{if(!YontooClient.isEmpty(a.attributes))for(var c=0;c<a.attributes.length;c++)if(a.attributes[c].name==="template"){switch(a.attributes[c].value){case "native.weblink":YontooClient.renderNode_native_base(a,
b,YontooClient.renderNode_native_weblink);break;case "native.button":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_button);break;case "native.imagebutton":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_imagebutton);break;case "native.imagestatebutton":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_imagestatebutton);break;case "native.label":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_label);break;case "native.image":YontooClient.renderNode_native_base(a,
b,YontooClient.renderNode_native_image);break;case "native.webhole":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_webhole);break;case "native.style":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_style);break;case "native.swf":YontooClient.renderNode_native_base(a,b,YontooClient.renderNode_native_swf)}var e=YontooClient.getComplexNodeAttribute(a,"id");YontooClient.isWidgetLoaded(e)||YontooClient.scheduleTryLoadWidget(e,a)}}catch(d){YontooClient.debugMsg("renderSingleWidget: "+
d)}},isWidgetLoaded:function(a){return null!=YontooClient.getCurrentDocument().getElementById(a)},scheduleTryLoadWidget:function(a,b){try{var c=YontooClient.pendingWidgetLoadsRetries[a];typeof c=="undefined"&&(c=0);c>0&&(YontooClient.pendingWidgetLoadsRetries[a]=c-1,YontooClient.pendingWidgetLoads[a]=b,setTimeout('try{YontooClient.checkWidgetLoaded("'+a+'");}catch(ex){}',YontooClient.pendingWidgetLoadsRetryPeriods[a]))}catch(e){YontooClient.debugMsg("scheduleTryLoadWidget: "+e)}},checkWidgetLoaded:function(a){try{var b=
YontooClient.pendingWidgetLoads[a];YontooClient.isEmpty(b)||(delete YontooClient.pendingWidgetLoads[a],YontooClient.isWidgetLoaded(a)||YontooClient.renderSingleWidget(b))}catch(c){YontooClient.debugMsg("checkWidgetLoaded: "+c)}},setContainerProperties:function(a){try{for(var b=0;b<a.attributes.length;b++)if(a.attributes[b].name==="width")a.attributes[b].value=YontooClient.getCurrentDocument().body.clientWidth;else if(a.attributes[b].name==="height")a.attributes[b].value=YontooClient.getCurrentDocument().body.clientHeight}catch(c){YontooClient.debugMsg("setContainerProperties: "+
c)}},getLocationStore:function(){try{var a=null,a=YontooClient.getCurrentDocument().getElementById("YontooLocationStore");return YontooClient.isEmpty(a)?"":a.textContent}catch(b){YontooClient.debugMsg("getLocationStore: "+b)}},setLocationStore:function(a){try{var b=null,b=YontooClient.getCurrentDocument().getElementById("YontooLocationStore");if(YontooClient.isEmpty(b))b=YontooClient.getCurrentDocument().createElement("div"),b.id="YontooLocationStore",b.style.display="none";b.textContent=a;YontooClient.getCurrentDocument().body.appendChild(b)}catch(c){YontooClient.debugMsg("setLocationStore: "+
c)}},getLocationStore2:function(){try{var a=null,a=YontooClient.getCurrentDocument().getElementById("YontooLocationStore2");return YontooClient.isEmpty(a)?"":a.textContent}catch(b){YontooClient.debugMsg("getLocationStore2: "+b)}},setLocationStore2:function(a){try{var b=null,b=YontooClient.getCurrentDocument().getElementById("YontooLocationStore2");if(YontooClient.isEmpty(b))b=YontooClient.getCurrentDocument().createElement("div"),b.id="YontooLocationStore2",b.style.display="none";b.textContent=a;
YontooClient.getCurrentDocument().body.appendChild(b)}catch(c){YontooClient.debugMsg("setLocationStore2: "+c)}},locationChanged:function(a){try{return YontooClient.getCurrentLocation()!==YontooClient.getLocationStore()?(a&&YontooClient.setLocationStore(YontooClient.getCurrentLocation()),!0):!1}catch(b){YontooClient.debugMsg("locationChanged: "+b)}},locationChanged2:function(a){try{return YontooClient.getCurrentLocation()!==YontooClient.getLocationStore2()?(a&&YontooClient.setLocationStore2(YontooClient.getCurrentLocation()),
!0):!1}catch(b){YontooClient.debugMsg("locationChanged: "+b)}},renderAllDelayedInProgress:!1,renderAllDelayedProc:function(){YontooClient.renderAll(!0,!1);YontooClient.renderAllDelayedInProgress=!1},renderAllDelayed:function(){if(!YontooClient.renderAllDelayedInProgress)YontooClient.renderAllDelayedInProgress=!0,setTimeout("try{YontooClient.renderAllDelayedProc();}catch(ex){}",0)},isHtmlContentType:function(){try{var a="HTML Document";if(YontooClient.isIE()){try{a=window.document.mimeType}catch(b){}if(!(a==
"HTML Document"||a=="Firefox Document"||a=="Chrome HTML Document"||a=="Navigator Document"||a=="Opera Web Document"||a=="Safari Document"||a.indexOf("HTM")>-1))return YontooClient.debugMsg("non-HTML content (IE)"),!1}else try{if(window.content.document.contentType!="text/html")return YontooClient.debugMsg("non-HTML content (FF)"),!1}catch(c){}return!0}catch(e){return!0}},renderAll:function(a,b){try{if(YontooClient.isHtmlContentType()){YontooClient.isIE()||(a=!0);var c=YontooClient.locationChanged2(!0);
if(a||YontooClient.locationChanged(!0)){(b||c)&&YontooClient.clearNodeMap();var e=YontooClient.getNodesFromPath("Extensions");if(!YontooClient.isEmpty(e))for(c=0;c<e.length;c++)for(var d=0;d<e[c].childNodes.length;d++){var f=YontooClient.selectSingleNode(e[c].childNodes[d],"Widgets");if(!YontooClient.isEmpty(f))YontooClient.pegOrigin="//Pegs/"+e[c].childNodes[d].attributes.getNamedItem("pegs").nodeValue,YontooClient.renderWidgets(f)}}}}catch(g){YontooClient.debugMsg("renderAll: "+g)}},loadXMLComplete:function(){try{if(!YontooClient.isEmpty(YontooClient.xmlDoc.firstChild)){YontooClient.root=
YontooClient.selectSingleNode(YontooClient.xmlDoc,"YLML");for(var a=YontooClient.getNodesFromPath("Extensions/*/Script"),b=0;b<a.length;b++){var c=a[b].attributes.getNamedItem("src");c&&c.value&&YontooClient.loadScript(c.value)}var e=YontooClient.getNodeFromPath("//RenderOrigin");YontooClient.renderOrigin=YontooClient.getNodeText(e);if(!YontooClient.isEmpty(YontooClient.renderOrigin)){YontooClient.renderAll(!1,!0);YontooClient.executeSection(YontooClient.renderOrigin+"/Events/Init");YontooClient.executeSection(YontooClient.renderOrigin+
"/Events/Return");var d=YontooClient.getNodeFromPath("Extensions");if(!YontooClient.isEmpty(d))for(a=0;a<d.childNodes.length;a++)YontooClient.executeSection("//Extensions/"+d.childNodes[a].nodeName+"/Events/Init")}}}catch(f){YontooClient.debugMsg("loadXMLComplete: "+f)}},executeSection:function(a){try{var b=YontooClient.getNodeFromPath(a);if(!YontooClient.isEmpty(b))for(var c=b.childNodes[0];!YontooClient.isEmpty(c);)c=YontooClient.execute(c)}catch(e){YontooClient.debugMsg("executeSection: "+e)}},
execute:function(a){try{switch(a.nodeName){case "Set":return YontooClient.execute_Set(a);case "If":return YontooClient.execute_If(a)}return null}catch(b){YontooClient.debugMsg("execute: "+b)}},getVersionForExtension:function(a){try{if(YontooClient.isEmpty(YontooClient.YomExtensionVersion))return"";var b=YontooClient.YomExtensionVersion[a];return YontooClient.isEmpty(b)?"":b}catch(c){return YontooClient.debugMsg("getVersionForExtension: "+c),""}},getNodeFromPath:function(a){try{return YontooClient.selectSingleNode(YontooClient.root,
a)}catch(b){return null}},getNodesFromPath:function(a){try{return YontooClient.selectNodes(YontooClient.root,a)}catch(b){return null}},execute_Set:function(a){try{var b=null,c=null,e=null,b=YontooClient.getComplexNodeAttribute(a,"path"),c=YontooClient.getComplexNodeAttribute(a,"value"),e=YontooClient.getComplexNodeAttribute(a,"property");if(YontooClient.isEmpty(b))return null;if(YontooClient.isEmpty(c))return null;var d=null,d=YontooClient.isEmpty(e)?b:b+"/@"+e,f=YontooClient.selectSingleNode(a,d);
if(YontooClient.isEmpty(f))return null;YontooClient.selectSingleNode(a,d).nodeValue=c;YontooClient.renderWidgets(f,b);return a.nextSibling}catch(g){YontooClient.debugMsg("execute_Set: "+g)}},setExecutionPoint:function(a){try{for(var b=YontooClient.selectSingleNode(YontooClient.root,"Yontoo/YontooSite/Home/Events/Init"),c=b.childNodes.length-1;c>=0;c--)b.removeChild(b.childNodes[c]);var e=YontooClient.xmlDoc.createElement("Jump"),d=YontooClient.xmlDoc.createAttribute("node");d.nodeValue=a;e.attributes.setNamedItem(d);
b.appendChild(e)}catch(f){YontooClient.debugMsg("setExecutionPoint: "+f)}},setReturnPoint:function(a){try{for(var b=YontooClient.selectSingleNode(YontooClient.root,"Yontoo/YontooSite/Home/Events/Return"),c=b.childNodes.length-1;c>=0;c--)b.removeChild(b.childNodes[c]);var e=YontooClient.xmlDoc.createElement("Jump"),d=YontooClient.xmlDoc.createAttribute("node");d.nodeValue=a;e.attributes.setNamedItem(d);b.appendChild(e)}catch(f){YontooClient.debugMsg("setReturnPoint: "+f)}},getComplexNodeAttribute:function(a,
b){try{if(!YontooClient.isEmpty(a.attributes.getNamedItem(b+"ref"))){var c=a.attributes.getNamedItem(b+"ref").value;a.setAttribute(b,YontooClient.selectSingleNode(a,c).value)}return YontooClient.isEmpty(a.attributes.getNamedItem(b))?null:a.attributes.getNamedItem(b).value}catch(e){YontooClient.debugMsg("getComplexNodeAttribute: "+e)}},execute_If:function(a){try{var b=YontooClient.selectSingleNode(a,"Exp"),c=b.attributes.getNamedItem("type").value,e=YontooClient.selectSingleNode(b,"Left");YontooClient.execute(e);
var d=YontooClient.getComplexNodeAttribute(e,"value"),f=YontooClient.selectSingleNode(b,"Right");YontooClient.execute(f);var g=YontooClient.getComplexNodeAttribute(f,"value");if(c==="equal"){b=null;for(b=d===g?YontooClient.selectSingleNode(a,"True").firstChild:YontooClient.selectSingleNode(a,"False").firstChild;!YontooClient.isEmpty(b);)b=YontooClient.execute(b)}return a.nextSibling}catch(m){YontooClient.debugMsg("execute_If: "+m)}}}:YontooClient.windowLoaded&&YontooClient.isIE()&&(YontooClient.locationChanged(!1)?
YontooClient.tryLoadYontoo(!0):YontooClient.renderAllDelayed())}catch(exGlobal){YontooClient.debugMsg("global: "+exGlobal)};
YontooClient.getClientIP = function(){return '193.137.92.22';};YontooClient.getInstallId = function(){return 'eee1962c-809f-4e99-8b66-2db001f45462';};YontooClient.swfobject=function(){function u(){if(!q){try{var a=d.getElementsByTagName("body")[0].appendChild(d.createElement("span"));a.parentNode.removeChild(a)}catch(b){return}q=!0;for(var a=w.length,c=0;c<a;c++)w[c]()}}function F(a){q?a():w[w.length]=a}function G(a){if(typeof m.addEventListener!=i)m.addEventListener("load",a,!1);else if(typeof d.addEventListener!=i)d.addEventListener("load",a,!1);else if(typeof m.attachEvent!=i)O(m,"onload",a);else if(typeof m.onload=="function"){var b=m.onload;
m.onload=function(){b();a()}}else m.onload=a}function P(){var a=d.getElementsByTagName("body")[0],b=d.createElement(r);b.setAttribute("type",x);var c=a.appendChild(b);if(c){var h=0;(function(){if(typeof c.GetVariable!=i){var f=c.GetVariable("$version");if(f)f=f.split(" ")[1].split(","),e.pv=[parseInt(f[0],10),parseInt(f[1],10),parseInt(f[2],10)]}else if(h<10){h++;setTimeout(arguments.callee,10);return}a.removeChild(b);c=null;A()})()}else A()}function A(){var a=t.length;if(a>0)for(var b=0;b<a;b++){var c=
t[b].id,h=t[b].callbackFn,f={success:!1,id:c};if(e.pv[0]>0){var d=o(c);if(d)if(y(t[b].swfVersion)&&!(e.wk&&e.wk<312)){if(s(c,!0),h)f.success=!0,f.ref=B(c),h(f)}else if(t[b].expressInstall&&C()){d.getAttribute("width");d.getAttribute("height");d.getAttribute("class")&&d.getAttribute("class");d.getAttribute("align")&&d.getAttribute("align");h=d.getElementsByTagName("param");f=h.length;for(d=0;d<f;d++)h[d].getAttribute("name").toLowerCase()!="movie"&&(h[d].getAttribute("name"),h[d].getAttribute("value"));
s(c,!0)}else Q(d),h&&h(f)}else if(s(c,!0),h){if((c=B(c))&&typeof c.SetVariable!=i)f.success=!0,f.ref=c;h(f)}}}function B(a){var b=null;if((a=o(a))&&a.nodeName=="OBJECT")typeof a.SetVariable!=i?b=a:(a=a.getElementsByTagName(r)[0])&&(b=a);return b}function C(){return!D&&y("6.0.65")&&(e.win||e.mac)&&!(e.wk&&e.wk<312)}function Q(a){if(e.ie&&e.win&&a.readyState!=4){var b=d.createElement("div");a.parentNode.insertBefore(b,a);b.parentNode.replaceChild(H(a),b);a.style.display="none";(function(){a.readyState==
4?a.parentNode.removeChild(a):setTimeout(arguments.callee,10)})()}else a.parentNode.replaceChild(H(a),a)}function H(a){var b=d.createElement("div");if(e.win&&e.ie)b.innerHTML=a.innerHTML;else if(a=a.getElementsByTagName(r)[0])if(a=a.childNodes)for(var c=a.length,h=0;h<c;h++)!(a[h].nodeType==1&&a[h].nodeName=="PARAM")&&a[h].nodeType!=8&&b.appendChild(a[h].cloneNode(!0));return b}function I(a,b,c){var h,f=o(c);if(e.wk&&e.wk<312)return h;if(f){if(typeof a.id==i)a.id=c;if(e.ie&&e.win){var k="",g;for(g in a)if(a[g]!=
Object.prototype[g])g.toLowerCase()=="data"?b.movie=a[g]:g.toLowerCase()=="styleclass"?k+=' class="'+a[g]+'"':g.toLowerCase()!="classid"&&(k+=" "+g+'="'+a[g]+'"');g="";for(var j in b)b[j]!=Object.prototype[j]&&(g+='<param name="'+j+'" value="'+b[j]+'" />');f.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+k+">"+g+"</object>";z[z.length]=a.id;h=o(a.id)}else{j=d.createElement(r);j.setAttribute("type",x);for(var n in a)a[n]!=Object.prototype[n]&&(n.toLowerCase()=="styleclass"?
j.setAttribute("class",a[n]):n.toLowerCase()!="classid"&&j.setAttribute(n,a[n]));for(k in b)b[k]!=Object.prototype[k]&&k.toLowerCase()!="movie"&&(a=j,g=k,n=b[k],c=d.createElement("param"),c.setAttribute("name",g),c.setAttribute("value",n),a.appendChild(c));f.parentNode.replaceChild(j,f);h=j}}return h}function J(a){var b=o(a);if(b&&b.nodeName=="OBJECT")e.ie&&e.win?(b.style.display="none",function(){if(b.readyState==4){var c=o(a);if(c){for(var d in c)typeof c[d]=="function"&&(c[d]=null);c.parentNode.removeChild(c)}}else setTimeout(arguments.callee,
10)}()):b.parentNode.removeChild(b)}function o(a){var b=null;try{b=d.getElementById(a)}catch(c){}return b}function O(a,b,c){a.attachEvent(b,c);v[v.length]=[a,b,c]}function y(a){var b=e.pv,a=a.split(".");a[0]=parseInt(a[0],10);a[1]=parseInt(a[1],10)||0;a[2]=parseInt(a[2],10)||0;return b[0]>a[0]||b[0]==a[0]&&b[1]>a[1]||b[0]==a[0]&&b[1]==a[1]&&b[2]>=a[2]?!0:!1}function K(a,b,c,h){if(!e.ie||!e.mac){var f=d.getElementsByTagName("head")[0];if(f){c=c&&typeof c=="string"?c:"screen";h&&(E=l=null);if(!l||E!=
c)h=d.createElement("style"),h.setAttribute("type","text/css"),h.setAttribute("media",c),l=f.appendChild(h),e.ie&&e.win&&typeof d.styleSheets!=i&&d.styleSheets.length>0&&(l=d.styleSheets[d.styleSheets.length-1]),E=c;e.ie&&e.win?l&&typeof l.addRule==r&&l.addRule(a,b):l&&typeof d.createTextNode!=i&&l.appendChild(d.createTextNode(a+" {"+b+"}"))}}}function s(a,b){if(L){var c=b?"visible":"hidden";q&&o(a)?o(a).style.visibility=c:K("#"+a,"visibility:"+c)}}function M(a){return/[\\\"<>\.;]/.exec(a)!=null&&
typeof encodeURIComponent!=i?encodeURIComponent(a):a}var i="undefined",r="object",x="application/x-shockwave-flash",m=window,d=document,p=navigator,N=!1,w=[function(){N?P():A()}],t=[],z=[],v=[],q=!1,D=!1,l,E,L=!0,e=function(){var a=typeof d.getElementById!=i&&typeof d.getElementsByTagName!=i&&typeof d.createElement!=i,b=p.userAgent.toLowerCase(),c=p.platform.toLowerCase(),e=c?/win/.test(c):/win/.test(b),c=c?/mac/.test(c):/mac/.test(b),b=/webkit/.test(b)?parseFloat(b.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,
"$1")):!1,f=!+"\u000b1",k=[0,0,0],g=null;if(typeof p.plugins!=i&&typeof p.plugins["Shockwave Flash"]==r){if((g=p.plugins["Shockwave Flash"].description)&&!(typeof p.mimeTypes!=i&&p.mimeTypes[x]&&!p.mimeTypes[x].enabledPlugin))N=!0,f=!1,g=g.replace(/^.*\s+(\S+\s+\S+$)/,"$1"),k[0]=parseInt(g.replace(/^(.*)\..*$/,"$1"),10),k[1]=parseInt(g.replace(/^.*\.(.*)\s.*$/,"$1"),10),k[2]=/[a-zA-Z]/.test(g)?parseInt(g.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}else if(typeof m.ActiveXObject!=i)try{var j=new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
if(j&&(g=j.GetVariable("$version")))f=!0,g=g.split(" ")[1].split(","),k=[parseInt(g[0],10),parseInt(g[1],10),parseInt(g[2],10)]}catch(n){}return{w3:a,pv:k,wk:b,ie:f,win:e,mac:c}}();(function(){e.w3&&((typeof d.readyState!=i&&d.readyState=="complete"||typeof d.readyState==i&&(d.getElementsByTagName("body")[0]||d.body))&&u(),q||(typeof d.addEventListener!=i&&d.addEventListener("DOMContentLoaded",u,!1),e.ie&&e.win&&(d.attachEvent("onreadystatechange",function(){d.readyState=="complete"&&(d.detachEvent("onreadystatechange",
arguments.callee),u())}),m==top&&function(){if(!q){try{d.documentElement.doScroll("left")}catch(a){setTimeout(arguments.callee,0);return}u()}}()),e.wk&&function(){q||(/loaded|complete/.test(d.readyState)?u():setTimeout(arguments.callee,0))}(),G(u)))})();(function(){e.ie&&e.win&&window.attachEvent("onunload",function(){for(var a=v.length,b=0;b<a;b++)v[b][0].detachEvent(v[b][1],v[b][2]);a=z.length;for(b=0;b<a;b++)J(z[b]);for(var c in e)e[c]=null;e=null;for(var d in YontooClient.swfobject)YontooClient.swfobject[d]=
null;YontooClient.swfobject=null})})();return{registerObject:function(a,b,c,d){if(e.w3&&a&&b){var f={};f.id=a;f.swfVersion=b;f.expressInstall=c;f.callbackFn=d;t[t.length]=f;s(a,!1)}else d&&d({success:!1,id:a})},getObjectById:function(a){if(e.w3)return B(a)},embedSWF:function(a,b,c,d,f,k,g,j,n,m){var o={success:!1,id:b};e.w3&&!(e.wk&&e.wk<312)&&a&&b&&c&&d&&f?(s(b,!1),F(function(){c+="";d+="";var e={};if(n&&typeof n===r)for(var l in n)e[l]=n[l];e.data=a;e.width=c;e.height=d;l={};if(j&&typeof j===r)for(var p in j)l[p]=
j[p];if(g&&typeof g===r)for(var q in g)typeof l.flashvars!=i?l.flashvars+="&"+q+"="+g[q]:l.flashvars=q+"="+g[q];if(y(f))p=I(e,l,b),e.id==b&&s(b,!0),o.success=!0,o.ref=p;else if(k&&C()){e.data=k;s(b,!0);return}else s(b,!0);m&&m(o)})):m&&m(o)},switchOffAutoHideShow:function(){L=!1},ua:e,getFlashPlayerVersion:function(){return{major:e.pv[0],minor:e.pv[1],release:e.pv[2]}},hasFlashPlayerVersion:y,createSWF:function(a,b,c){if(e.w3)return I(a,b,c)},showExpressInstall:function(a,b,c){e.w3&&C()&&s(c,!0)},
removeSWF:function(a){e.w3&&J(a)},createCSS:function(a,b,c,d){e.w3&&K(a,b,c,d)},addDomLoadEvent:F,addLoadEvent:G,getQueryParamValue:function(a){var b=d.location.search||d.location.hash;if(b){/\?/.test(b)&&(b=b.split("?")[1]);if(a==null)return M(b);for(var b=b.split("&"),c=0;c<b.length;c++)if(b[c].substring(0,b[c].indexOf("="))==a)return M(b[c].substring(b[c].indexOf("=")+1))}return""},expressInstallCallback:function(){D&&(o("SWFObjectExprInst"),D=!1)}}}();

YontooClient.YomExtensionVersion = new Object({});
YontooClient.urlCategories = [234];
YontooClient.isBadUrlCategory = false;
YontooClient.isBadUrl = false;YontooClient.initialize();YontooClient.tryTrapEvents(true);YontooClient.handleWindowLoad();document.YontooClient = YontooClient;</script><script src="./Introdução à Programação em Assembler_files/cpxbanner.min.js"></script><script type="text/javascript" async="" src="./Introdução à Programação em Assembler_files/mixpanel-2.1.min.js"></script></head>
  <body dir="LTR" style="color: rgb(0, 0, 0); margin-right: 180px;" lang="pt-PT">
    <p><br>
      <br>
    </p>
    <h2 class="western" align="CENTER">Introdução à Programação em <i>Assembly</i></h2>
    <h2 class="western" align="CENTER">Com base no SPIM</h2>
    <p align="CENTER">Henrique M. D. Santos <a href="mailto:%28hsantos@dsi.uminho.pt">(hsantos@dsi.uminho.pt</a>)</p>
    <p align="CENTER">© Dpt. Sistemas de Informação, Universidade do
      Minho</p>
    <p align="CENTER">Outubro, 2011</p>
    <hr>
    <h3 class="western" align="LEFT">Indíce</h3>
    <p align="LEFT">1. <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#1.">Introdução</a><br>
      2. <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.">Arquitectura subjacente ao SPIM</a><br>
      &nbsp;&nbsp;&nbsp; 2.1 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.1">Grupo de Registos</a><br>
      &nbsp;&nbsp;&nbsp; 2.2 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.2">Conjunto de instruções</a><br>
      &nbsp;&nbsp;&nbsp; 2.3 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.3">Modos de endereçamento</a><br>
      &nbsp;&nbsp;&nbsp; 2.4 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.4">Organização da memória</a><br>
      &nbsp;&nbsp;&nbsp; 2.5 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.5">Funções de Sistemas
        disponíveis (<i>System Calls</i>)</a><a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#2.4"><br>
      </a>3. <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#3.">Informação complementar e <i>download</i></a><br>
      &nbsp;&nbsp;&nbsp; 3.1 <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#3.1">Como começar a programar
        (rapidamente!)</a></p>
    <hr>
    <h3 class="western" align="LEFT"><a name="1."></a>1. Introdução</h3>
    <p align="LEFT">O SPIM é um simulador de um sistema baseado nos
      microprocessadores MIPS, tendo sido desenvolvido por James Larus,
      para fins pedagógicos (<a href="http://spimsimulator.sourceforge.net/">http://spimsimulator.sourceforge.net/</a>).
Executa
a
larga



      maioria das instruções definidas na arquitectura MIPS32. Enquanto
      simulador de sistema, o SPIM não se limita a implementar o <i>Instruction


        Set</i> (IS) do MIPS, simulando igualmente alguns componentes de
      suporte típicos em microcomputadores, tais como a <u>memória
        central</u>, o <u>teclado</u> e o <i><u>display</u></i>. Com
      estes componentes não é difícil imaginar uma arquitectura
      suficientemente simples para o propósito da aprendizagem de
      diversos conceitos associados à arquitectura de computadores.</p>
    <p align="LEFT">Desde o início do desenvolvimento do SPIM, a
      arquitectura dos microprocessadores MIPS sofrearam, naturalmente,
      bastantes evoluções. A primeira versão da arquitectura, designada
      por MIPS-I e materializada nos microprocessadores MIPS
      R2000/R3000, foi dando lugar à arquitecturas MIPS-II/III/IV e
      MIPS-V. A última geração corresponde às arquitecturas MIPS32 e
      MIPS64, que dão o nome aos microprocessadores actualmente
      disponíveis. Como é habitual na filosofia de desenvolvimento deste
      tipo de tecnologia, as gerações sucessivas vão mantendo a retro
      compatibilidade, pelo que a arquitectura MIPS-I continua a ser
      suportada. No que concerne aos objectivos de um curso básico em <i>Assembler</i>,
      a arquitectura MIPS-I é suficientemente rica e simples para
      proporcionar um bom recurso pedagógico, pelo que será esta a
      arquitectura que vai ser abordada (caso seja necessário, as
      instruções relevantes do repertório enriquecido do MIPS32 poderão
      ser introduzidas pontualmente).</p>
    <p align="LEFT">Na descrição que se segue assume-se que o leitor tem
      já conhecimentos sólidos relativamente à <a href="javascript:void(0);" onmouseover="return
        overlib(&#39;Organização interna do processador e que condiciona o
        seu conjunto de instruções.&#39;);" onmouseout="return nd();">arquitectura
        de microprocessadores</a> (os detalhes do <a href="http://www.mips.com/">MIPS</a> não serão aqui abordados),
      ao <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/docs/CicloDeInstrucao.pdf" onmouseover="return
        overlib(&#39;Sequência temporal de passos com que o processador
        executa uma instrução. (Seguir o link...)&#39;, HEIGHT, 30, LEFT,
        ABOVE, SNAPX, 5, SNAPY, 10);" onmouseout="return nd();">ciclo
        básico de execução</a> de um microprocessador e aos <a href="javascript:void(0);" onmouseover="return overlib(&#39;Forma
        como a informação é representada para que possa ser processada
        pelo processador.&#39;, HEIGHT, 30, LEFT, ABOVE, SNAPX, 5, SNAPY,
        10);" onmouseout="return nd();">sistemas de numeração</a> (com
      particular relevância para as representações em binário e em
      hexadecimal).</p>
    <h3 class="western" align="LEFT"><a name="2."></a>2. Arquitectura
      subjacente ao SPIM</h3>
    <p align="LEFT">A arquitectura (virtual) implementada pelo SPIM
      herda, naturalmente, a grande maioria das características do MIPS.
      Nomeadamente, o <u>Grupo de Registos</u>, o <u>Conjunto de
        Instruções</u> e os <u>Modos de Endereçamento</u>. Para além
      disso é imprescindível conhecer a <u>Organização da Memória</u>
      (condicionada pelo MIPS, mas também pelas opções da arquitectura
      do sistema, nomeadamente no que respeita à localização dos
      programas) e o <u>Interface com Periféricos</u>, neste caso
      simples, apenas o teclado e o <i>display</i>.</p>
    <p align="LEFT">Para suportar os periféricos e algumas outras
      funções do sistema, como o atendimento de excepções (interrupções
      decorrentes de algum evento externo ao programa, ou situações de
      erro na execução de um programa), os construtores do SPIM
      muniram-no com um pequeno programa, designado por <a href="javascript:void(0);" onmouseover="return overlib(&#39;Conjunto
        de funções que constituem o núcleo do Sistema Operativo. Muitas
        dessas funções estão acessíveis ao programador.&#39;, HEIGHT, 30,
        LEFT, ABOVE, SNAPX, 5, SNAPY, 10);" onmouseout="return nd();"><i>Kernel</i></a>
      que, em última análise, representa um (muito) pequeno Sistema
      Operativo. Apesar da simplicidade, a sua presença ajuda a
      compreender o papel do SO e, em especial, a sua relação com os
      compiladores e as aplicações (mais sobre este assunto na secção
      2.5).</p>
    <h4 class="western" align="LEFT"><a name="2.1"></a>2.1 Grupo de
      Registos</h4>
    <p align="LEFT">O MIPS dispõe de um banco de 32 registos, de 32 bits
      cada - ver tabela 1. Ao escrever um programa em <i>assembler</i>,
      a grande maioria das instruções referem-se a um ou mais destes
      registos, para definir a localização do(s) operando(s) e do
      destino de um eventual resultado. No que respeita ao MIPS os
      registos são identificados por um número, de 0 a 31 e, em <i>assembler</i>,
      convencionou-se identificá-los precedendo o seu número pelo
      caracter '$'. Assim, o registo 1 é identificado por $1, o 2 por
      $2, etc.</p>
    <p align="LEFT">Muito embora os registos possam ser utilizados
      livremente num programa em <i>assembler</i>, os desenhadores de
      compiladores forçaram algumas restrições com objectivo de
      facilitar a implementação dessas ferramentas. Essas restrições
      resultaram na atribuição de funções específicas a alguns registos,
      o que é de alguma forma traduzido pelos nomes que lhes foram
      atribuídos. Por exemplo, o registo <b>$zero</b>, correspondente
      ao registo <b>$0</b>, contém sempre a constante <b>0</b>, sendo
      sempre o registo de origem quando essa constante é necessária; o
      registo <b>$1</b> é designado por <b>$at </b>e utilizado pelo <i>assembler</i>
      para implementação de pseudoinstruções (que iremos abordar mais
      tarde). A tabela 1 resume a correspondência que existe entre os 32
      registos do MIPS e os nomes lógicos.</p>
    <center>
      <table cellpadding="0" cellspacing="0" width="655">
        <tbody>
          <tr>
            <td style="border: medium none ; padding: 0cm;" bgcolor="#99ff99" height="30" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <span lang="en-US">N</span>o<span lang="en-US">me</span></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" bgcolor="#99ff99" width="89">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> Reg #</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" bgcolor="#99ff99" width="254">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <span lang="en-US">U</span>utilização</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" bgcolor="#99ff99" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> Preservado nas chamadas de
                rotinas</p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$zero</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">0</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff"><span lang="en-US">Constant</span>e
                  <span lang="en-US">0</span></font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff"><span lang="en-US">N</span>ão</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#808080">$at</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#808080">1</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#808080">Reservado para o <i>Assembler</i></font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#808080">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$v0-$v1</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">2-3</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff">Valores de retorno das
                  rotinas</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff"><span lang="en-US">N</span>ão</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$a0-$a3</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">4-7</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff"><span lang="en-US">Argument</span>o<span lang="en-US">s</span> nas chamadas de rotinas</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;"><strong><span lang="en-US">$t0-$t9</span></strong></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> 8-15 / 24-25</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;">Temporários - nunca são preservados</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <span lang="en-US">N</span>ão</p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;"><strong><span lang="en-US">$s0-$s7</span></strong></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> 16-23</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;">Registos de trabalho - são preservados</p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> SIM</p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#808080">$k0-$k1</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#808080">26-27</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#808080">Reservado para o <i>kernel</i></font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#808080">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$gp</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">28</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff">Ponteiro "Global"</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$sp</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">29</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff">Ponteiro para a "Pilha"</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="28" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$fp</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">30</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1px solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff">Ponteiro para a "Frame"</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff">SIM</font></p>
            </td>
          </tr>
          <tr>
            <td style="border: medium none ; padding: 0cm;" height="30" width="70">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" lang="en-US"> <font color="#0000ff">$ra</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="89">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER" lang="en-US"> <font color="#0000ff">31</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="254">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;"><font color="#0000ff">Endereço de retorno</font></p>
            </td>
            <td style="border: medium none ; padding: 0cm;" width="246">
              <p style="border: 1pt solid rgb(0, 0, 0); padding:
                0.05cm;" align="CENTER"> <font color="#0000ff">SIM</font></p>
            </td>
          </tr>
        </tbody>
      </table>
    </center>
    <h5 class="western" align="CENTER">&nbsp;Tabela 1 - Grupo de
      Registos do MIPS</h5>
    <p align="LEFT">Observando a tabela, é fácil concluir que, existe
      uma "recomendação" para utilizar 8 variáveis globais (registos $s0
      a $s7) e 10 variáveis locais de trabalho ($t0 a $t9), cujo valor
      não deve ultrapassar um contexto local de execução (rotina ou
      função). Sendo necessárias mais variáveis ou estruturas de dados
      mais complexas, então deve-se recorrer à memória externa. Os
      registos "ponteiro" deverão ser utilizados para aceder à memória,
      sendo particularmente críticos os ponteiros de "pilha" e de
      "frame", utilizados na implementação de funções ou de
      procedimentos, para passar argumentos, resultados e armazenar os
      endereço de retorno. Este mecanismo é bastante complexo e irá
      merecer uma análise mais cuidada numa secção posterior. Como foi
      referido, estas convenções resultam de um esforço de
      sistematização dos grupos de desenvolvimento de ferramentas
      (compiladores) para o MIPS e, com excepção dos registos $0 e $31,
      não resultam de qualquer restrição do hardware. No entanto, por
      uma questão de compatibilidade na integração com programas
      produzidos por aqueles compiladores, todos os utilizadores de <i>assembler</i>
      são convidados a aderir a esta convenção.</p>
    <a name="AutoNumber1"></a>
    <center>
      <table bgcolor="#c0c0c0" cellpadding="5" cellspacing="1" width="100%">
        <tbody>
          <tr>
            <td style="border: 3.55pt double rgb(128, 0, 0); padding:
              0.13cm;" width="100%">
              <p>O editor de texto recomendado para utilizar com o SPIM,
                o MIPSter, permite um mecanismo rápido para a utilização
                dos nomes lógicos dos registos.</p>
            </td>
          </tr>
        </tbody>
      </table>
    </center>
    <h4 class="western" align="LEFT"><a name="2.2"></a>2.2 Conjunto de
      Instruções</h4>
    <p align="LEFT">O MIPS dispõe de um repertório de poucas dezenas de
      instruções que formam um <u><b>núcleo central</b></u>, estendido
      por mais algumas dezenas de <u><b>pseudoinstruções</b></u>, as
      quais são "instruções" compostas por sequências das primeiras. A
      estas instruções, o SPIM adiciona ainda mais cerca de 10 funções
      de sistema, que qualquer programa pode utilizar para aceder ao
      teclado e ao <i>display</i>, ou simplesmente para terminar um
      programa e devolver o controlo ao "SO". Do ponto de vista da
      programação não é necessário (nem desejável) distinguir as
      instruções do núcleo central das pseudoinstruções, até porque, em
      sucessivas gerações do processador, assiste-se&nbsp; à migração de
      algumas pseudoinstruções para o núcleo. Apenas como referência
      pode aqui consultar a lista das <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/imagens/MIPS-MachLangLow.jpg">instruções máquina</a> e
      equivalentes <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/imagens/MIPS-AssembLangLow.jpg">instruções
        em <i>assembler</i></a>, listadas no livro do Patterson como
      pertencentes ao núcleo central, excluindo as operações em vírgula
      flutuante.</p>
    <p align="LEFT">As instruções do MIPS são todas de 32 bits,
      recorrendo a apenas três formatos. De uma forma simples, um dos
      formatos (<i>R-type</i>) identifica 3 registos na mesma instrução,
      dois deles contêm operandos e o terceiro é o destino do resultado;
      um outro formato (<i>I-type</i>) identifica 2 registos e uma
      constante de 16 bits, um dos registos contém um operando (a
      constante é o segundo operando) e o segundo é o destino do
      resultado; o último formato (<i>J-type) </i>apenas contém um
      código e uma constante de 26 bits, sendo tipicamente utilizada em
      "saltos".</p>
    <p align="LEFT">Tome-se o exemplo da adição para ilustrar os dois
      primeiros formatos:</p>
    <ul>
      <li>
        <p style="margin-bottom: 0cm;" align="LEFT"><font face="Courier
            New">add&nbsp;&nbsp;&nbsp; $v1, $a1, $s1</font>&nbsp;&nbsp;&nbsp;


          #adiciona o conteúdo de $a1 ao conteúdo de $s1 e coloca o
          resultado em $v1 </p>
      </li>
      <li>
        <p align="LEFT"><font face="Courier New">addi&nbsp;&nbsp; $v1,
            $a1, -1 </font>&nbsp;&nbsp;&nbsp; #adiciona o conteúdo de
          $a1 a -1 (<u>valor imediato</u>) e coloca o resultado em $v1 </p>
      </li>
    </ul>
    <p align="LEFT">Tome-se o exemplo de um <i>jump</i> para ilustrar o
      terceiro formato:</p>
    <ul>
      <li>
        <p align="LEFT"><font face="Courier New">j&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

dest




          </font>&nbsp;&nbsp;&nbsp; # Salta para a instrução precedida
          da <i>label</i> dest (dentro da gama de endereços de 1Gbytes)
        </p>
      </li>
    </ul>
    <p align="LEFT">Como seria de esperar, o MIPS inclui instruções <u>aritméticas</u>,
      <u>lógicas</u>, <u>de salto (condicional e não condicional)</u> e
      <u>de acesso à memória</u>. As instruções aritméticas existem em
      duas versões, considerando representações de valores com e e sem
      sinal. Assim, por exemplo, encontramos as instruções <font face="Courier New">add</font> e <font face="Courier New">addu</font>,
      a primeira considera os operandos num representação com sinal
      (complemento para 2) e a segunda considera os operandos sem sinal
      (binário natural). Atendendo à referência acima sobre os formatos
      das instruções, o sufixo "i" é utilizado para identificar as
      instruções que utilizam o segundo formato, isto é, com um valor <u>i</u>mediato.



      Ainda para o exemplo da adição, as instruções <font face="Courier
        New">addi</font> e <font face="Courier New">addiu</font>
      correspondem às variantes anteriores, mas utilizando um valor
      constante (de 16 bits) na própria instrução.</p>
    <p align="LEFT">A divisão e a multiplicação constituem casos
      particulares. Atendendo ao tamanho dos resultados, estes são
      sempre armazenados em dois registos pré-definidos, designados por
      <i>High</i> e <i>Low</i>, cada um deles de 32 bits. Por essa
      razão nestas operações não existe o formato <i>R-type</i>, mas
      existem as variantes com e sem sinal. De notar que aqueles
      registos especiais só podem ser acedidos pelas instruções <font face="Courier New">mfhi</font> (<i>Move From High</i>), <font face="Courier New">mflo</font> (<i>Move From Low</i>), <font face="Courier New">mthi</font> (<i>Move To High</i>) e <font face="Courier New">mtlo</font> (<i>Move To Low</i>), que
      permitem transferir o valor de um daqueles registos para qualquer
      um dos registos do Grupo de Registos, e vice-versa.</p>
    <p align="LEFT">Os acessos à memória podem ser feitos ao nível da <i>word</i>
      (32 bits), da <i>half-word</i> (16 bits), ou do <i>byte</i>,
      considerando os operandos em representação com e sem sinal. Para
      cada tipo de transferência existe uma instrução específica. No
      caso da transferência da memória para um registo, existem as
      instruções <font face="Courier New">lb</font> (<i>Load Byte</i>),
      <font face="Courier New">lh</font> (<i>Load Half-word</i>) e <font face="Courier New">lw</font> (<i>Load-word</i>), colocando-lhes
      o sufixo "u" no caso de se tratar de valores sem sinal. As
      instruções para armazenamento na memória são as instruções de <i>Store</i>,
      diferindo as respectivas mnemónicas, face às anteriores, pela
      troca do "l" por um "s".</p>
    <p align="LEFT">As instruções de salto condicionais permitem
      comparar o conteúdo de dois registos e executar um salto se o
      resultado da comparação for igual (<font face="Courier New">beq</font>)
      ou diferente (<font face="Courier New">bneq</font>) de zero.
      Atendendo a que estas instruções estão implementadas com o formato
      <i>I-type</i>, apenas permitem saltar dentro do espaço acessível
      por uma constante de 16 bits, com sinal (na prática isto não é uma
      limitação). Se o registo $zero for utilizado na comparação estas
      instruções degeneram facilmente em instruções de salto "se maior
      que zero" ou "se menor que zero". Mais, o registo $1 é utilizado
      como destino em instruções de comparação (<i>set on less then</i>
      - <font face="Courier New">slt</font>), com e sem sinal, para
      permitir a criação de várias pseudoinstruções de saltos
      condicionais. </p>
    <p align="LEFT">Finalmente, as instruções de salto incondicionais,
      permitem atingir espaços de memória mais largos ao utilizarem o
      formato <i>J-type</i> (<i>jump</i> - <font face="Courier New">j</font>
      - e <i>jump and link</i> - <font face="Courier New">jal</font>),
      ou ao utilizarem um registo como referência para a posição de
      memória destino (<i>jump register</i> - <font face="Courier New">jr</font>).



      De salientar a papel das instruções jal e jr no mecanismo de
      chamada de funções, a primeira porque guarda o <u>endereço de
        retorno</u> (endereço seguinte à prórpia instrução) no registo
      $31, automaticamente, a segunda porque permite regressar ao ponto
      de retorno, utilizando o conteúdo do mesmo registo $31 como
      destino do salto. Apesar de simples, este mecanismo não serve para
      encadear vários procedimentos e deverá ser aumentado com a
      possibilidade de utilização de uma <i>stack</i>, como veremos
      mais adiante.</p>
    <h4 class="western" align="LEFT"><a name="2.3"></a>2.3 Modos de
      endereçamento</h4>
    <p align="LEFT">Neste aspecto em particular o MIPS é bastante
      simples. A sua arquitectura pertence a uma classe habitualmente
      designada por <i>Load/Store</i>, caracterizada por <u>apenas</u>
      essas instruções (com eventuais variantes) acederem à memória.
      Para além disso, apenas um modo de endereçamento é suportado pelo
      hardware. Esse modo é designado por <b>endereço de base e
        deslocamento</b>. Por exemplo, a instrução:<br>
      &nbsp;&nbsp;&nbsp; <font face="Courier New">lw&nbsp;$1, 16($a0)</font>
      <br>
      calcula o <b>endereço efectivo</b> da posição de memória onde se
      encontra o operando, adicionando o conteúdo do registo $a0 (<u>registo


        de base</u>, neste caso) com a constante 16 (o <u>deslocamento</u>).


      Uma cópia do valor contido nessa posição de memória é então
      carregada para o registo $1. O endereço de base é sempre o
      conteúdo de um registo e o deslocamento é sempre uma constante de
      16 bits, assumida como um valor representado em complementos para
      2 (de -32.768 a + 32.767). De notar que no caso das instruções <i>load


        word</i> e <i>store word </i>o endereço efectivo resultante
      deve ser sempre um múltiplo de 4 uma vez que, com é discutido na
      secção seguinte, a memória está organizada em bytes e uma <i>word</i>
      ocupa 4 bytes contíguos, sempre alocados em blocos de endereço
      múltiplo de 4.</p>
    <h4 class="western" align="LEFT"><a name="2.4"></a>2.4 Organização
      da memória</h4>
    <p align="LEFT">A memória pode ser vista como uma pilha (ou vector)
      de localizações onde a informação binária é guardada e de onde ela
      pode ser requisitada, uma "palavra" de cada vez. O termo
      "palavra", neste contexto, traduz a quantidade de informação com
      que o processador lida naturalmente. No caso do MIPS essa
      quantidade corresponde a 32 bits, ou seja, 4 bytes. Para endereçar
      a memória o MIPS utiliza igualmente valores de 32 bits, sem sinal,
      podendo gerar qualquer endereço entre 0 e 4.294.967.295 (2<sup>32</sup>-1)


      - corresponde a um espaço de memória máximo de 4Gbytes.</p>
    <p align="LEFT">Apesar do MIPS aceder à memória preferencialmente
      por palavras, a memória está organizada por bytes, isto é, <u>a
        cada endereço corresponde 1 byte</u>. Desta forma, uma palavra
      ocupa 4 bytes, ou seja 4 endereços. Isto implica adoptar uma
      convenção para a forma com cada palavra é distribuída pelos 4
      endereços. Basicamente são duas as opções disponíveis: armazenar
      nos endereços mais baixos os valores menos significativos (<i><b>little-endian</b></i>),


      ou armazenar nos endereços mais altos os valores menos
      significativos (<i><b>big-endian</b></i>). No MIPS optou-se por
      esta última alternativa (não é evidente qualquer vantagem de
      qualquer uma destas opções!).</p>
    <p align="LEFT">Por questões de optimização relacionados com o facto
      de o barramento para a memória ser de 32 bits, esta é fisicamente
      organizada em bancos de 4 bytes. Este facto implica que cada
      palavra seja armazenada num banco, ou seja, em endereços múltiplos
      de 4. A figura seguinte ilustra bem esta característica. Como se
      pode observar na figura da direita um alinhamento incorrecto iria
      provocar o acesso a dois banco consecutivos, o que seria complexo
      gerir ao nível da organização física da memória. Da mesma forma, o
      acesso a meia-palavra (valor de 16 bits) também não pode violar
      esta regra da fronteira de um banco. Na figura é ainda evidente
      que se uma palavra se encontra armazenada no endereço 4, por
      exemplo, a palavra seguinte ocupará o endereço 8.</p>
    <p align="CENTER"><img src="./Introdução à Programação em Assembler_files/IntroS1.gif" name="Imagem1" align="BOTTOM" border="0" height="375" width="673"></p>
    <h5 class="western" align="CENTER">Figura 1 - Alinhamento de uma
      word em memória (correcto e incorrecto)</h5>
    <p align="LEFT">Para além da organização física da memória, o SPIM
      define ainda um mapa de memória, isto é, uma organização imposta
      para os programas se integrarem com o "SO". A figura seguinte
      ilustra esse mapa. As zonas de memória reservadas correspondem a
      zonas onde se encontra o código do <i>kernel</i> e onde estão
      instalados os periféricos - o acesso a I/O no MIPS é feito por
      mapeamento na memória. O programa é sempre carregado a partir do
      endereço 0x00400000, enquanto que a zona de dados começará no
      endereço 0x10010000 (o que significa que um programa dispõe de
      cerca de 252Mbytes de memória, ou seja, cerca de 64M instruções).
      A <i>stack</i> e a zona de dados partilham o espaço até ao
      endereço 0x7fffeffc, que corresponde a uma área de memória de
      cerca de 1,75Gbytes. Como é normal, a zona de dados e a <i>stack</i>
      crescem em sentido contrário, o que permite optimizar a ocupação
      do espaço disponível. Ao carregar um programa para o SPIM ele será
      integrado neste mapa, sendo os registos inicializados com os
      valores necessários para o garantir essa integração. Na prática,
      qualquer SO impõe restrições deste tipo, que são escrupulosamente
      cumpridas por quem gera código, quer manual quer automaticamente (<b>os


        compiladores</b>).</p>
    <p align="CENTER"><img src="./Introdução à Programação em Assembler_files/IntroS2.gif" name="Imagem2" align="BOTTOM" border="0" height="389" width="340"></p>
    <h5 class="western" align="CENTER">Figura 2 - Mapa de memória
      imposto pelo SPIM</h5>
    <h4 class="western" align="LEFT"><a name="2.5"></a>2.5 Funções de
      Sistemas disponíveis (<i>System Calls</i>)</h4>
    <p align="LEFT">Tal como já foi referido, o SPIM simula um sistema
      completo, para o que lhe foi incluído um simulador de um
      hipotético <i>kernel</i>. Essa parte do simulador executa um
      conjunto de funções auxiliares, como seja a leitura do teclado
      (valores de diferente tipo) e a escrita no monitor de <i>strings</i>
      e variáveis de vários tipos.</p>
    <p align="LEFT">Para além daquelas funções mais ou menos óbvias, uma
      parte deste <i>kernel</i> está dedicado ao atendimento de <a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm#" onmouseover="return overlib(&#39;Eventos externos e
        internos (respectivamente) que, quando ocorrem, exigem atenção
        imediata - execução de uma rotina associada.&#39;, HEIGHT, 30, LEFT,
        ABOVE, SNAPX, 5, SNAPY, 10);" onmouseout="return nd();">interrupções



        e excepções</a> (<i>exceptions</i>). Exemplos de excepções são
      as <span style="color: rgb(204, 0, 0);">tentativas de execução de
        uma divisão por 0</span>, erro que qualquer programador pode
      cometer facilmente, ou a <span style="color: rgb(204, 0, 0);">execução



        de uma instrução inválida</span> (código de operação inválido).
      Um exemplo de uma interrupção é o pedido de um periférico que,
      após executar uma tarefa solicitada, se encontra pronto para
      efectuar uma transacção de informação. No ambiente simulado pelo
      SPIM as interrupções não são particularmente importantes (os
      periféricos são muito simples), mas as excepções são-no.
      Inclusivamente o código associado às excepções está disponível e
      até pode ser alterado pelo programador (ficheiro <b>exceptions.s</b>,
      na directoria de instalação do PCSpim; no caso do QtSpim o
      equivalente a esse ficheiro está embebido no código da aplicação
      e, logicamente, não pode ser alterado). Refira-se ainda que na
      instalação/configuração do SPIM (quer com o PCSpim, quer com o
      QtSpim) é possível escolher um ficheiro alternativo com o código
      associado ao atendimento das excepções e interrupções - mais
      informação sobre este tópico no Apêndice A do livro do Patterson,
      secção A.7 (disponível na área de downloads, secção 3).</p>
    <p align="LEFT">Quanto às funções disponíveis no <i>kernel </i>para


      o programador, elas estão resumidas na tabela1. Para utilizar
      estas funções, o programador deve carregar no registo <b>$v0</b>
      o valor associado à função que pretende chamar, carregar nos
      registos pertinentes (<b>$a0</b>, <b>$a1</b> e <b>$f12</b>) os
      argumentos, quando tal for necessário - às funções de entrada de
      dados <u>n</u>ão se <u>a</u>plica, naturalmente, esta
      necessidade - e executar a "instrução" <b>syscall</b>. Esta
      instrução, definida apenas no contexto do simulador, simula a
      chamada da função do <i>kernel</i>, executa a respectiva função e
      devolve, quando pertinente, resultados nos registos <b>$v0</b> e
      <b>$f0</b>. Finalmente, refira-se que o MIPSter permite inserir no
      programa, automaticamente, as instruções necessárias para preparar
      a e chamar cada uma das funções do sistema.</p>
    <a name="AutoNumber2"></a>
    <center>
      <table cellpadding="5" cellspacing="1">
        <tbody>
          <tr>
            <td style="border-style: double none double double;
              border-color: rgb(128, 128, 128) -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width: 2.6pt
              medium 2.6pt 2.6pt; padding: 0.13cm 0cm 0.13cm 0.13cm;" bgcolor="#000080">
              <p align="CENTER"><font color="#ffffff"><b>Código (em $v0)</b></font></p>
            </td>
            <td style="border-style: double none double double;
              border-color: rgb(128, 128, 128) -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width: 2.6pt
              medium 2.6pt 2.6pt; padding: 0.13cm 0cm 0.13cm 0.13cm;" bgcolor="#000080">
              <p align="CENTER"><font color="#ffffff"><b>Função</b></font></p>
            </td>
            <td style="border-style: double none double double;
              border-color: rgb(128, 128, 128) -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width: 2.6pt
              medium 2.6pt 2.6pt; padding: 0.13cm 0cm 0.13cm 0.13cm;" bgcolor="#000080">
              <p align="CENTER"><font color="#ffffff"><b>Argumento(s)</b></font></p>
            </td>
            <td style="border: 2.6pt double rgb(128, 128, 128); padding:
              0.13cm;" bgcolor="#000080">
              <p align="CENTER"><font color="#ffffff"><b>Resultado(s)</b></font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">1</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Escrever um valor inteiro</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$a0 = valor inteiro</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">O valor é escrito na janela do monitor</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">2</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Escrever um valor <i>float</i></font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$f12 = valor <i>float</i></font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">O valor é escrito na janela do monitor</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">4</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Escrever uma <i>string</i></font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$a0 = ponteiro para a <i>string</i></font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">O valor é escrito na janela do monitor</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">5</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Ler um valor inteiro</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">na</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$v0 fica com o valor lido</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">6</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Ler um valor <i>float</i></font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">na</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$f0 fica com o valor lido</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">7</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Ler um valor <i>double</i></font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">na</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$f0 fica com o valor lido</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">8</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Ler uma string</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$a0 = ponteiro para memória<br>
                  $a1 = número máximo de caracteres</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">A string é lida para a memória</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">9</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Pedir espaço de memória</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$a0 = quantidade de memória</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$v0 fica com o endereço inicial da zona
                  de memória</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">10</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Finalizar programa</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">na</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">na</font></p>
            </td>
          </tr>
          <tr>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p align="CENTER"><font size="2">11</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">Escrever um byte</font></p>
            </td>
            <td style="border-style: none none double double;
              border-color: -moz-use-text-color -moz-use-text-color
              rgb(128, 128, 128) rgb(128, 128, 128); border-width:
              medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">$a0 = byte</font></p>
            </td>
            <td style="border-style: none double double; border-color:
              -moz-use-text-color rgb(128, 128, 128) rgb(128, 128, 128);
              border-width: medium 2.6pt 2.6pt; padding: 0cm 0.13cm
              0.13cm;" bgcolor="#c0c0c0">
              <p><font size="2">O valor é escrito na janela do monitor</font></p>
            </td>
          </tr>
        </tbody>
      </table>
    </center>
    <h5 class="western" align="CENTER">Tabela 2 - Funções do <i>kernel</i>
      disponíveis ao programador</h5>
    <h3 class="western" align="LEFT"><a name="3."></a>3. Informação
      complementar e <i>download</i></h3>
    <ul>
      <li>
        <p style="margin-bottom: 0cm;">Programa de instalação da última
          versão dos Spim, para várias plataformas (<a href="http://spimsimulator.sourceforge.net/">SPIM: A MIPS32
            Simulator</a>)  estão disponíveis duas versões: o PCSpim,
          mais antigo e já descontinuado; e o QtSpim, que é apontado com
          a melhor opção.<br>
        </p>
      </li>
    </ul>
    <ul>
      <li>
        <p style="margin-bottom: 0cm;">Apêndice A do livro do Patterson:
          assemblers, links e o SPIM (<a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/docs/HP_AppA.pdf">HP_AppA</a>)
          <img src="./Introdução à Programação em Assembler_files/pdfsml.gif" name="Imagem4" align="BOTTOM" border="0" height="14" width="39"> </p>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">Manual de utilização e
          configuração do PCSPIM (<a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/docs/spimwin.pdf">spimwin</a>)
          <img src="./Introdução à Programação em Assembler_files/pdfsml.gif" name="Imagem5" align="BOTTOM" border="0" height="14" width="39"> - útil se utilizar este
          programa.</p>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">Um editor orientado à sintaxe da
          linguagem <i>assembly</i> do MIPS, designado por <a href="http://www.downcastsystems.com/mipster/">MIPSter</a>&nbsp;



          (este editor é proprietário e já foi comercializado;
          atualmente está disponível gratuitamente, mas carece de uma
          chave de registo que tem que ser solicitada) </p>
      </li>
      <li>
        <p><a href="http://www3.dsi.uminho.pt/hsantos/MIPSStaff/Exemplos/ExerciciosSPIM.pdf">Folha de exercícios</a>
          <img src="./Introdução à Programação em Assembler_files/pdfsml.gif" name="Imagem7" align="BOTTOM" border="0" height="14" width="39">&nbsp; </p>
      </li>
    </ul>
    <h4 class="western"><a name="3.1"></a>3.1 Como começar a programar
      (rapidamente!)</h4>
    <ol>
      <li>
        <p style="margin-bottom: 0cm;">(5 min.) Fazer o <i>download</i>
          do simulador e instalar (seguir as instruções e, <span style="color: rgb(0, 153, 0); text-decoration: underline;">caso

utilize
o



            PCSpim</span>, ter o cuidado de instalar devidamente o <b>trap



            handler</b> - se por qualquer razão o programa de instalação
          não configurar correctamente o <b>trap handler</b>, deverá
          fazer a configuração manual, através do menu <b>Simulator </b><span style="font-family: Symbol;"><span style="font-weight:
              bold;">-&gt;</span></span><b> Settings...</b>, activando a
          opção <b>Load trap file</b> e seleccionando o ficheiro <span style="font-weight: bold;">exceptions.s</span>, que se
          encontra na directoria de instalação do PCSpim... Ufff!). </p>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">(5 min.) Fazer o <i>download</i>
          do MIPSter e instalar (seguir as instruções). </p>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">(20 min.) Executar o MIPSter.</p>
        <ol>
          <li>
            <p style="margin-bottom: 0cm;">Abrir o ficheiro
              HelloWorld.s, que se encontra na directoria de instalação
              do MIPSter e estudá-lo cuidadosamente. </p>
          </li>
        </ol>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">Abrir o ficheiro example.s, que
          se encontra na directoria de instalação do MIPSter e estudá-lo
          cuidadosamente. Tenha em atenção os seguintes detalhes:</p>
        <table cellpadding="4" cellspacing="3" width="824">
          <colgroup><col width="173"> <col width="624"> </colgroup><tbody>
            <tr valign="TOP">
              <td style="border-style: double none double double;
                border-color: rgb(128, 128, 128) -moz-use-text-color
                rgb(128, 128, 128) rgb(128, 128, 128); border-width:
                2.6pt medium 2.6pt 2.6pt; padding: 0.11cm 0cm 0.11cm
                0.11cm;" width="173">
                <p align="CENTER"><font size="4"><b>Secção do programa</b></font></p>
              </td>
              <td style="border: 2.6pt double rgb(128, 128, 128);
                padding: 0.11cm;" width="624">
                <p align="CENTER"><font size="4"><b>Comentário</b></font></p>
              </td>
            </tr>
            <tr valign="TOP">
              <td style="border-style: none none double double;
                border-color: -moz-use-text-color -moz-use-text-color
                rgb(128, 128, 128) rgb(128, 128, 128); border-width:
                medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.11cm
                0.11cm;" width="173">
                <p><b>. data</b></p>
              </td>
              <td style="border-style: none double double; border-color:
                -moz-use-text-color rgb(128, 128, 128) rgb(128, 128,
                128); border-width: medium 2.6pt 2.6pt; padding: 0cm
                0.11cm 0.11cm;" width="624">
                <p>Esta zona do programa destina-se a definir variáveis.
                  Tudo o que estiver declarado dentro desta zona irá ser
                  mapeado na memória, no segmento de dados (ver mapa
                  acima). As <i>labels</i> são associadas a endereços
                  de memória e os valores são representados no conteúdo
                  da memória. Por exemplo:</p>
                <p><b>var1 .word 50</b></p>
              </td>
            </tr>
            <tr valign="TOP">
              <td style="border-style: none none double double;
                border-color: -moz-use-text-color -moz-use-text-color
                rgb(128, 128, 128) rgb(128, 128, 128); border-width:
                medium medium 2.6pt 2.6pt; padding: 0cm 0cm 0.11cm
                0.11cm;" width="173">
                <p><b>. text</b></p>
              </td>
              <td style="border-style: none double double; border-color:
                -moz-use-text-color rgb(128, 128, 128) rgb(128, 128,
                128); border-width: medium 2.6pt 2.6pt; padding: 0cm
                0.11cm 0.11cm;" width="624">
                <p>Esta zona do programa destina-se às instruções.</p>
              </td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">(20 min.) Leia o manual do
          QtSpim, que está contido no <i>help</i> do programa. Caso use
          o PCSpim deve fazer o <i>download</i> do manual (spimwin) -
          atenção que a sequência de páginas está invertida, sendo
          preferível imprimir o documento para o utilizar <font face="Wingdings">L</font>; ler as duas primeiras páginas
          sobre a configuração, em paralelo com a utilização do PCSpim.</p>
        <ol>
          <li>
            <p style="margin-bottom: 0cm;">De notar que o simulador <span style="font-weight: bold;">SPIM</span> disponível com o
              PCSpim pode ainda ser usado através da linha de comando,
              permitindo executar um programa em modo transparente,
              apenas mostrando o <i>output</i> desse programa (este
              modo está documentado nas páginas 2/3 do manual do
              PCSpim); no modo interativo, com o interface gráfico, o
              utilizador tem um controlo absoluto sobre a execução do
              programa. APENAS ESTE SEGUNDO MODO TEM INTERESSE NO
              CONTEXTO DA APRENDIZAGEM DA LINGUAGEM ASSEMBLER.</p>
          </li>
        </ol>
      </li>
      <li>
        <p style="margin-bottom: 0cm;">(20 min.) Experimentar executar
          os programas atrás referidos (<span style="text-decoration:
            underline;">HelloWorld.s</span> e <span style="text-decoration: underline;">example.s</span>),
          explorando os comandos de execução passo-a-passo (<i style="font-weight: bold;">single step</i>) e <span style="font-weight: bold;">Go</span>. Observe as alterações
          sucessivas na janela dos registos, na janela da área de
          memória, na janela de comandos (esta é a menos importante) e
          na janela do monitor. Tente compreender a organização de
          memória descrita acima e identificar como os diferentes blocos
          de memória são apresentados no simulador. </p>
      </li>
      <li>
        <p>(20 a 25 horas) Executar os diversos exercícios propostos nas
          fichas a serem entregues nas aulas. Sempre que necessário,
          recorra ao apêndice A do livro do Patterson (disponível em <i>download</i>)
          para ultrapassar qualquer dificuldade relacionada com a
          linguagem <i>assembly</i> ou com o simulador.</p>
      </li>
    </ol>
  

<div id="YontooInstallID" style="display: none;">eee1962c-809f-4e99-8b66-2db001f45462</div><div id="Y2PluginIds" style="display: none;">Y2:eee1962c-809f-4e99-8b66-2db001f45462</div><div id="YontooLocationStore2" style="display: none;">http://www3.dsi.uminho.pt/hsantos/MIPSStaff/IntroSPIM.htm</div><div id="Y2CpxSide" class="yontoolayerwidget" style="left: 0px; top: 0px; text-align: left; vertical-align: top; width: 1px; height: 1px; position: absolute;"></div><div id="EasyInlineApp" class="yontoolayerwidget" style="left: 0px; top: 0px; text-align: left; vertical-align: top; width: 0px; height: 0px; position: absolute;"></div><div style="position: fixed; right: 0px; top: 0px; width: 172px; height: 100%; margin: 0px; border: 0px; padding: 0px; background-color: rgb(238, 238, 238); z-index: 2147483646;"><div id="csidebanner" style="position: absolute; top: 0px; bottom: 0px; margin: auto; border: 0px; padding: 0px; width: 172px; height: 600px;"><iframe src="./Introdução à Programação em Assembler_files/tt.htm" width="160" height="600" frameborder="0" scrolling="no" allowtransparency="allowTransparency" style="display: block; margin: 0px; border: 0px; padding: 0px; width: 160px; height: 600px;"></iframe><img src="./Introdução à Programação em Assembler_files/closebutton_12x12.png" alt="Close" style="display: block; position: absolute; right: 0px; top: 0px; margin: 0px; border: 0px; padding: 0px; cursor: pointer;"><div style="position: absolute; margin: 0px; border: 0px; padding: 1px; top: 300px; right: -288px; width: 586px; height: 10px; -webkit-transform: rotate(90deg); text-align: right; color: rgb(51, 51, 51); font-style: normal; font-variant: normal; font-weight: normal; font-size: 10px; line-height: 10px; font-family: &#39;normal Arial&#39;, Helvetica, sans-serif; text-decoration: initial;"><a href="http://jeetyetmedia.com/ata_eil2.php" target="_blank" style="color: rgb(51, 51, 51); font-style: normal; font-variant: normal; font-weight: normal; font-size: 10px; line-height: 10px; font-family: &#39;normal Arial&#39;, Helvetica, sans-serif; text-decoration: initial;">About this ad</a></div></div></div><div style="position: absolute; z-index: 2147483647; width: 133px; height: 41.65px; left: -1000px; top: -1000px;"><object type="application/x-shockwave-flash" style="outline: none; visibility: visible;" data="http://edge.easyinline.com/app/easyInline.swf" width="100%" height="100%" id="easyInlineSwf"><param name="menu" value="false"><param name="allowScriptAccess" value="always"><param name="wmode" value="transparent"><param name="flashvars" value="supportUrl=http://www.easyinline.com/support&amp;baseUrl=http://edge.easyinline.com&amp;productName=EasyInline"></object></div></body></html>