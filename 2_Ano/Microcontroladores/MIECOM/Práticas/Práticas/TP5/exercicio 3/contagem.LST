A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN contagem.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE contagem.a51 NOMOD51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ; Filipe Rodrigues nº 68455
                       2     ; Eduardo Silva nº 70216
                       3     
                       4     ;       INICIO DE PROGRAMA
                       5                     
                       6     ;#include <89C51IC2.inc> 
                +1     7  +1 $save     
                +1   208  +1 $restore 
                     209     
                     210                     NAME MAIN
                     211                     EXTRN   CODE    (ENVIAR_RS232, RECEBER_RS232, CONFIG_RS232)
                     212                     
----                 213                     CSEG    AT      0H
0000 802E            214                     JMP             MAIN
----                 215                     CSEG    AT      30H
                     216                     
  008C               217                     C1              EQU             140             ; variável "C1" toma o valo
                             r de ajuste para o ciclo de atraso de menor peso
  008A               218                     C2              EQU             138             ; variável "C2" toma o valo
                             r de ajuste para o ciclo de atraso de peso intermédio
  000C               219                     C3              EQU             12              ; variável "C3" toma o valo
                             r de ajuste para o ciclo de atraso de maior peso
                     220     
                     221     ; ROTINA PARA CONFIGURAR A PORTA DE SERIE, E, INICIALIZAR AS VARIÁVEIS  (posição da função 
                             pode ser alterada)           
0030                 222     MAIN:
0030 120000   F      223                     CALL    CONFIG_RS232    ; configura a porta de serie(flags, bourate, etc)
0033 900086          224                     MOV     DPTR,#MENSAGEM  ; DPTR toma o valor do apontador de MENSAGEM, ou se
                             ja o valor da primeira posição da string
0036 7800            225                     MOV             R0,#0h                  ; variável de controlo dos limites 
                             superior e inferiores da sequencia
0038 7900            226                     MOV             R1,#0h                  ; contador que envia o valor que ap
                             arece no display para o terminal
                     227                     
003A 7D8C            228                     MOV             R5,#C1                  ; ajuste de "ATRASO_2"
003C 7E8A            229                     MOV             R6,#C2                  ; ajuste de "ATRASO_1"
003E 7F0C            230                     MOV             R7,#C3                  ; ajuste de "ATRASO_0"
0040 8000            231                     JMP             ESCREVER                ; saltar para ESCREVER(envia para o
                              display e escreve no terminal
                     232                     
                     233     ; ROTINA PARA ESCREVER NO DISPLAY O VALOR APONTADO POR "R0" EM DPTR, E ENVIAR PARA O TERMIN
                             AL O VALOR DE "R1"(=R0) (posição da função pode ser alterada)                
0042                 234     ESCREVER:
0042 E8              235                     MOV             A,R0                    ; A = R0
0043 93              236                     MOVC    A,@A+DPTR               ; A = @A(posição onde se quer ir buscar o n
                             umero) + DPTR(1ª posição do array onde se encontram os valores a ser enviados para o micro
0044 F590            237                     MOV             P1,A                    ; enviar para o display, o valor pr
                             etendido do array
                     238                     
0046 E9              239                     MOV             A,R1                    ; A = R1 , valor a aparecer no term
                             inal
0047 120000   F      240                     CALL    ENVIAR_RS232    ; enviar para o terminal valor de R1 
                     241                     ;CALL   ATRASO_0
                     242     
004A                 243     PRESSIONAR:
004A 30B505          244                     JNB             P3.5,PRESSIONAR1                ; salta para PRESSIONAR1
004D 30B308          245                     JNB             P3.3,PRESSIONAR2                ; salta para PRESSIONAR2
0050 80F8            246                     JMP             PRESSIONAR
A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     2

                     247                     
                     248     ; CICLO DE 2 ROTINAS, PRESSIONAR1(se pressionar o botão de somar) E PRESSIONAR2 (se pressio
                             anr o botão de subtrair)
0052                 249     PRESSIONAR1:
0052 30B5FD          250                     JNB             P3.5,$                  
0055 20B506          251                     JB              P3.5,INCREMENTAR                
                     252                     ;JMP            PRESSIONAR2             ; se NÃO pressionou saltar para PRE
                             SIONAR2
                     253                     
0058                 254     PRESSIONAR2:;(a sua possição tem que ser logo a seguir a PRESSIONAR1)
0058 30B3FD          255                     JNB             P3.3,$                  
005B 20B50C          256                     JB              P3.5,DECREMENTAR                ; se NÃO pressionou saltar 
                             para PRESIONAR1
                     257                     
                     258     ; SUB-ROTINA PARA SOMAR 1 A "R0" E "R1" (posição da função pode ser alterada)
005E                 259     INCREMENTAR:
005E 08              260                     INC             R0                                                      ; s
                             omar "1" a R0
005F 09              261                     INC             R1                                                      ; s
                             omar "1" a R1
                     262                             ; verifica se passou o nº 9 (ciclo "if-else")
0060 E8              263                     MOV             A,R0                    
0061 B40ADE          264                     CJNE    A,#0Ah,ESCREVER                         ; salta para "ESCREVER", se
                              A(=R0) for diferente de "Ah"(=10)
                     265                             ; proximo nº toma valor de "0"
0064 7800            266                     MOV             R0,#0h                                          ; R0 = "0h"
0066 7900            267                     MOV             R1,#0h                                          ; R1 = "0h"
0068 80D8            268                     JMP             ESCREVER                                        ; senão sal
                             ta para "ESCREVER"
                     269     
                     270     ; SUB-ROTINA PARA SUBTRAIR 1 A "R0" E "R1" (posição da função pode ser alterada)
006A                 271     DECREMENTAR:
006A 18              272                     DEC             R0                                                      ; s
                             ubtraí "1" a R0
006B 19              273                     DEC             R1                                                      ; s
                             ubtraí "1" a R0
                     274                             ; verifica se passou(-) o nº 0 (ciclo "if-else")
006C E8              275                     MOV             A,R0
006D B4FFD2          276                     CJNE    A,#0FFh,ESCREVER                        ; salta para "ESCREVER", se
                              A(=R0) for diferente de "FFh"(="-1"="16(decimal)")
                     277                             ; proximo nº toma valor de "9"
0070 7809            278                     MOV             R0,#9h                                          ; R0 = "9h"
0072 7909            279                     MOV             R1,#9h                                          ; R1 = "9h"
0074 80CC            280                     JMP             ESCREVER                                        ; senão sal
                             ta para "ESCREVER"
                     281     
                     282     ; ROTINA PARA OBTER UM ATRASO DE 0.7s (posição da função pode ser alterada)
0076                 283     ATRASO_0:
0076                 284     ATRASO_1:
0076                 285     ATRASO_2:
0076 00              286                     NOP                                     ; queima 1 ciclo por cada ciclo
0077 DDFD            287                     DJNZ    R5,ATRASO_2             ; decrementa "1" a R5 e salta para "ATRASO_
                             2" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
0079 7D8C            288                     MOV             R5,#C1                  ; ajuste de "ATRASO_2"
                     289     
007B 00              290                     NOP
007C DEF8            291                     DJNZ    R6,ATRASO_1             ; decrementa "1" a R5 e salta para "ATRASO_
                             1" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
007E 7E8A            292                     MOV             R6,#C2                  ; ajuste de "ATRASO_1"
                     293     
0080 00              294                     NOP
0081 DFF3            295                     DJNZ    R7,ATRASO_0             ; decrementa "1" a R5 e salta para "ATRASO_
                             0" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
0083 7F0C            296                     MOV             R7,#C3                  ; ajuste de "ATRASO_0"
                     297                     
0085 22              298                     RET                                             ;O PROGRAMA CONTINUA ONDE F
A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     3

                             OI CHAMADA A FUNÇÃO "ATRASO_0"
                     299     
                     300     ; LOCAL ONDE "DPTR" É INICIALIZADO (posição da função pode ser alterada)
0086                 301     MENSAGEM:
0086 0CCF5446        302                     DB      0Ch,0CFh,54h,46h,87h,26h,24h,4Fh,04h,07h                ; numeros d
                             e "0" a "9" em codigo reconhecivel para o display
008A 8726244F                
008E 0407                    
                     303                     
                     304     END             ;FIM DE PROGRAMA
A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ATRASO_0 . . . . .  C ADDR   0076H   A   
ATRASO_1 . . . . .  C ADDR   0076H   A   
ATRASO_2 . . . . .  C ADDR   0076H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BDRCON . . . . . .  D ADDR   009BH   A   
BRL. . . . . . . .  D ADDR   009AH   A   
C1 . . . . . . . .  N NUMB   008CH   A   
C2 . . . . . . . .  N NUMB   008AH   A   
C3 . . . . . . . .  N NUMB   000CH   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  D ADDR   00D8H   A   
CCF1 . . . . . . .  D ADDR   00D9H   A   
CCF2 . . . . . . .  D ADDR   00DAH   A   
CCF3 . . . . . . .  D ADDR   00DBH   A   
CCF4 . . . . . . .  D ADDR   00DCH   A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  D ADDR   00DFH   A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON0 . . . . . .  D ADDR   008FH   A   
CKCON1 . . . . . .  D ADDR   00AFH   A   
CKRL . . . . . . .  D ADDR   0096H   A   
CKSEL. . . . . . .  D ADDR   0085H   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CONFIG_RS232 . . .  C ADDR   -----       EXT
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  D ADDR   00DEH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DECREMENTAR. . . .  C ADDR   006AH   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ENVIAR_RS232 . . .  C ADDR   -----       EXT
ES . . . . . . . .  B ADDR   00A8H.4 A   
ESCREVER . . . . .  C ADDR   0042H   A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     5

EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B1H   A   
INCREMENTAR. . . .  C ADDR   005EH   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00B2H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
KBE. . . . . . . .  D ADDR   009DH   A   
KBF. . . . . . . .  D ADDR   009EH   A   
KBLS . . . . . . .  D ADDR   009CH   A   
MAIN . . . . . . .  C ADDR   0030H   A   
MENSAGEM . . . . .  C ADDR   0086H   A   
OSCCON . . . . . .  D ADDR   0086H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PI2. . . . . . . .  D ADDR   00C0H   A   
PI2_1. . . . . . .  B ADDR   00C0H.1 A   
PI2_O. . . . . . .  B ADDR   00C0H.0 A   
PPCL . . . . . . .  B ADDR   00B8H.6 A   
PRESSIONAR . . . .  C ADDR   004AH   A   
PRESSIONAR1. . . .  C ADDR   0052H   A   
PRESSIONAR2. . . .  C ADDR   0058H   A   
PSL. . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0L . . . . . . .  B ADDR   00B8H.1 A   
PT1L . . . . . . .  B ADDR   00B8H.3 A   
PT2L . . . . . . .  B ADDR   00B8H.5 A   
PX0L . . . . . . .  B ADDR   00B8H.0 A   
PX1L . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
RECEBER_RS232. . .  C ADDR   -----       EXT
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
SPCON. . . . . . .  D ADDR   00C3H   A   
SPDAT. . . . . . .  D ADDR   00C5H   A   
SPSTA. . . . . . .  D ADDR   00C4H   A   
SSADR. . . . . . .  D ADDR   0096H   A   
A51 MACRO ASSEMBLER  CONTAGEM                                                             12/11/2013 00:44:17 PAGE     6

SSCON. . . . . . .  D ADDR   0093H   A   
SSCS . . . . . . .  D ADDR   0094H   A   
SSDAT. . . . . . .  D ADDR   0095H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
