A51 MACRO ASSEMBLER  CONTAGEM                                                             11/14/2013 15:43:06 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN contagem.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE contagem.a51 NOMOD51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;       INICIO DE PROGRAMA
                       2     
                       3     ;#include <89C51IC2.inc>
                +1     4  +1 $save     
                +1   205  +1 $restore 
                     206     
                     207                     NAME MAIN
                     208                     EXTRN   CODE    (ENVIAR_RS232, RECEBER_RS232, CONFIG_RS232)
                     209                     
----                 210                     CSEG    AT      0H
0000 802E            211                     JMP             MAIN
----                 212                     CSEG    AT      30H
                     213                     
  0005               214                     N               EQU             5               ; variável "N" toma o valor
                              de 3
                     215     
                     216     ; ROTINA PARA CONFIGURAR A PORTA DE SERIE, E, INICIALIZAR AS VARIÁVEIS  (posição da função 
                             pode ser alterada)           
0030                 217     MAIN:
0030 120000   F      218                     CALL    CONFIG_RS232    ; configura a porta de serie(flags, bourate, etc)
0033 7905            219                     MOV             R1,#N                   ; registo R1 guarda o valor de "N" 
                                  
0035 7A00            220                     MOV             R2,#0                   ; registo R2 que irá ter os valores
                              a ser enviados PARA o terminal(quando executar "CALL        ENVIAR_RS232" = mostra no terminal)
0037 7B00            221                     MOV             R3,#0                   ; contador de N até 0 no ciclo CONT
                             ADOR
0039 7C00            222                     MOV             R4,#0                   ; variável que irá percurrer a Stri
                             ng e tomar os seus valores
                     223                     
003B 7D00            224                     MOV             R5,#0                   ; contador de menor peso, em ATRASO
                             _2
003D 7E00            225                     MOV             R6,#0                   ; contador de peso intermedio, em A
                             TRASO_1
003F 7F00            226                     MOV             R7,#0                   ; contador de maior peso, em ATRASO
                             _0
                     227     
                     228     ; ROTINA PARA CADA SEQUENCIA DE "0" ATÉ "N"
0041                 229     RECOMECAR:
0041 E9              230                     MOV             A,R1                    ; A = R1
0042 FB              231                     MOV             R3,A                    ; R3 = A, terá que tomar o valor de
                              "N" a cada sequência de numeros uma vez que se encontra com o valor de "0" no final de cada
0043 0B              232                     INC             R3                              ; R3 = R3+1, porque no cicl
                             o da sequencia ele decrementa de "N" até ser igual a "0", não correndo o ciclo do "0". Logo R3 = N+1
0044 7C00            233                     MOV     R4,#0                   ; R4 = 0, terá que tomar o valor de "0" a c
                             ada sequência de numeros uma vez que se encontra com o valor de "N" no final de cada
0046 7A00            234                     MOV     R2,#0                   ; R2 = 0, terá que tomar o valor de "0" a c
                             ada sequência de numeros uma vez que se encontra com o valor de "N" no final de cada
0048 900071          235                     MOV     DPTR,#MENSAGEM  ; DPTR toma o valor do apontador de MENSAGEM, ou se
                             ja o valor da primeira posição da string
                     236     
                     237     ; ROTINA PARA CONTAR CADA NUMERO COM O ATRASO
004B                 238     CONTADOR:
004B 7DDE            239                     MOV             R5,#222         ; ajuste de "ATRASO_2"
004D 7E8C            240                     MOV             R6,#140                 ; ajuste de "ATRASO_1"
004F 7F04            241                     MOV             R7,#4                   ; ajuste de "ATRASO_0"
0051 1166            242                     CALL    ESCREVER                ; chama a função ESCREVER e quando esta aca
                             bar o programa continua aqui
0053 115C            243                     CALL    ATRASO_0                ; chama a função ATRASO e quando esta acaba
A51 MACRO ASSEMBLER  CONTAGEM                                                             11/14/2013 15:43:06 PAGE     2

                             r o programa continua aqui
0055 1B              244                     DEC             R3                              ; decrementa "1" a R3 
0056 EB              245                     MOV             A,R3
0057 B400F1          246                     CJNE    A,#0,CONTADOR   ; salta para CONTADOR enquanto R3 for diferente de 
                             "0" (ciclo de "N" vezes)
005A 80E5            247                     JMP             RECOMECAR               ; quando os "N" numeros forem digit
                             ados ele salta para RECOMEÇAR
                     248     
                     249     ; ROTINA PARA OBTER UM ATRASO DE 0.7s (posição da função pode ser alterada)
005C                 250     ATRASO_0:
005C                 251     ATRASO_1:
005C                 252     ATRASO_2:
005C 00              253                     NOP                                     ; queima 1 ciclo por cada ciclo
005D DDFD            254                     DJNZ    R5,ATRASO_2             ; decrementa "1" a R5 e salta para "ATRASO_
                             2" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
005F 00              255                     NOP
0060 DEFA            256                     DJNZ    R6,ATRASO_1             ; decrementa "1" a R5 e salta para "ATRASO_
                             1" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
0062 00              257                     NOP
0063 DFF7            258                     DJNZ    R7,ATRASO_0             ; decrementa "1" a R5 e salta para "ATRASO_
                             0" enquanto for diferente de "0". A partir do 2º ciclo R5 = 0-1 = 255, ou o ciclo ocorrer 255 vezes
0065 22              259                     RET                                             ;O PROGRAMA CONTINUA ONDE F
                             OI CHAMADA A FUNÇÃO "ATRASO_0"
                     260     
                     261     ; ROTINA PARA ENVIAR PARA O DISPLAY E PARA O TERMINAL O NUMERO DA SEQUENCIA (posição da fun
                             ção pode ser alterada)
0066                 262     ESCREVER:
0066 EC              263             MOV             A,R4                    ; A = R4
0067 93              264                     MOVC    A,@A+DPTR               ; A = ao conteudo da 1ª posição da mensagem
                             /String
0068 F590            265                     MOV             P1,A                    ; o display toma o valor desse cont
                             eudo
006A EA              266                     MOV             A,R2                    ; A = toma o valor de R2
006B 120000   F      267                     CALL    ENVIAR_RS232    ; envia para o terminal o valor de A(=R2)
006E 0C              268                     INC             R4                              ; R4 = R4+1
006F 0A              269                     INC             R2                              ; R2 = R2+1
0070 22              270                     RET                                     ; O PROGRAMA CONTINUA ONDE FOI CHAM
                             ADA A FUNÇÃO "ESCREVER"
                     271                     
                     272     ; LOCAL ONDE "DPTR" É INICIALIZADO (posição da função pode ser alterada)
0071                 273     MENSAGEM:
0071 0CCF5446        274                     DB      0Ch,0CFh,54h,46h,87h,26h,24h,4Fh,04h,07h        ; 00, 01, 02, 03, 0
                             4, 05, 06, 07, 08, 09
0075 8726244F                
0079 0407                    
                     275                     
                     276     END             ;FIM DE PROGRAMA
A51 MACRO ASSEMBLER  CONTAGEM                                                             11/14/2013 15:43:06 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ATRASO_0 . . . . .  C ADDR   005CH   A   
ATRASO_1 . . . . .  C ADDR   005CH   A   
ATRASO_2 . . . . .  C ADDR   005CH   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BDRCON . . . . . .  D ADDR   009BH   A   
BRL. . . . . . . .  D ADDR   009AH   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  D ADDR   00D8H   A   
CCF1 . . . . . . .  D ADDR   00D9H   A   
CCF2 . . . . . . .  D ADDR   00DAH   A   
CCF3 . . . . . . .  D ADDR   00DBH   A   
CCF4 . . . . . . .  D ADDR   00DCH   A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  D ADDR   00DFH   A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON0 . . . . . .  D ADDR   008FH   A   
CKCON1 . . . . . .  D ADDR   00AFH   A   
CKRL . . . . . . .  D ADDR   0096H   A   
CKSEL. . . . . . .  D ADDR   0085H   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CONFIG_RS232 . . .  C ADDR   -----       EXT
CONTADOR . . . . .  C ADDR   004BH   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  D ADDR   00DEH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ENVIAR_RS232 . . .  C ADDR   -----       EXT
ES . . . . . . . .  B ADDR   00A8H.4 A   
ESCREVER . . . . .  C ADDR   0066H   A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
A51 MACRO ASSEMBLER  CONTAGEM                                                             11/14/2013 15:43:06 PAGE     4

FCON . . . . . . .  D ADDR   00D1H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B1H   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00B2H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
KBE. . . . . . . .  D ADDR   009DH   A   
KBF. . . . . . . .  D ADDR   009EH   A   
KBLS . . . . . . .  D ADDR   009CH   A   
MAIN . . . . . . .  C ADDR   0030H   A   
MENSAGEM . . . . .  C ADDR   0071H   A   
N. . . . . . . . .  N NUMB   0005H   A   
OSCCON . . . . . .  D ADDR   0086H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PI2. . . . . . . .  D ADDR   00C0H   A   
PI2_1. . . . . . .  B ADDR   00C0H.1 A   
PI2_O. . . . . . .  B ADDR   00C0H.0 A   
PPCL . . . . . . .  B ADDR   00B8H.6 A   
PSL. . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0L . . . . . . .  B ADDR   00B8H.1 A   
PT1L . . . . . . .  B ADDR   00B8H.3 A   
PT2L . . . . . . .  B ADDR   00B8H.5 A   
PX0L . . . . . . .  B ADDR   00B8H.0 A   
PX1L . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
RECEBER_RS232. . .  C ADDR   -----       EXT
RECOMECAR. . . . .  C ADDR   0041H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
SPCON. . . . . . .  D ADDR   00C3H   A   
SPDAT. . . . . . .  D ADDR   00C5H   A   
SPSTA. . . . . . .  D ADDR   00C4H   A   
SSADR. . . . . . .  D ADDR   0096H   A   
SSCON. . . . . . .  D ADDR   0093H   A   
SSCS . . . . . . .  D ADDR   0094H   A   
SSDAT. . . . . . .  D ADDR   0095H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
A51 MACRO ASSEMBLER  CONTAGEM                                                             11/14/2013 15:43:06 PAGE     5

T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
